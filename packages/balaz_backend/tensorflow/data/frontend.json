[
{ "text": "[SPARK-35004][TEST] Fix Incorrect assertion of `master/worker web ui available behind front-end reverseProxy` in MasterSuite", "icon": "front-end" },
{ "text": "Web page front-end for grokdump.", "icon": "front-end" },
{ "text": "Reenable web_tests previously disabled to allow frontend feature.", "icon": "front-end" },
{ "text": "[Loc] Changing mobile throttling settings webtest to match frontend", "icon": "front-end" },
{ "text": "Disable a couple of devtools web_tests to allow landing a frontend change", "icon": "front-end" },
{ "text": "Temporarily disable webtest for frontend fix", "icon": "front-end" },
{ "text": "[DevTools] Reenable web_tests invalidated by frontend change", "icon": "front-end" },
{ "text": "WebUI Tab Strip: Send tab groups' visual data to front-end", "icon": "front-end" },
{ "text": "Tab Strip WebUI: Send crashed status to front-end", "icon": "front-end" },
{ "text": "Tab Strip WebUI: Add placeholder front-end", "icon": "front-end" },
{ "text": "[WebAudio DevTools] Implement the front-end for AudioCallbackMetric", "icon": "front-end" },
{ "text": "[fuchsia] Exclude DevTools front-end and WebUI resources from build.", "icon": "front-end" },
{ "text": "IndexedDB: Remove WebData usage from frontend", "icon": "front-end" },
{ "text": "Allow creating new DOM Storage items in the Web Inspector.", "position": "front-end" },
{ "text": "Automatically refresh DOM Storage grids in the Web Inspector.", "position": "front-end" },
{ "text": "Added support for inspect() in the Web Inspector command line.", "position": "front-end" },
{ "text": "Adds strings for possible future web clips on the new tab page", "position": "front-end" },
{ "text": "Partial fix to 7028 - Pinning in Win7.A complete fix will require Gears to set the application id as a property on the shortcut As of this cl, web applications hosted by Chrome will appear in their own groups on the task bar. However, they can not be pinned from the main application window nor can they be pinned from the shortcut. The former results in Chrome being pinned, and the latter results in a quick start button but does not group web applications under that button. Instead in the latter case a web appliation will form a new group.", "position": "front-end" },
{ "text": "This CL fixes issue 17468 - Regression: Extra white rectangle showing when mouse hovering on every web page", "position": "front-end" },
{ "text": "When a web contents drag has a URL but no title, make up a title for it.", "position": "front-end" },
{ "text": "Allow dragging a link from the web contents to the bookmark bar to get a named bookmark.", "position": "front-end" },
{ "text": "Fix web contents drag corner case.", "position": "front-end" },
{ "text": "Adds support for an initial set of WAI-ARIA roles, needed to support screen readers in AJAX web applications (e.g. Gmail).", "position": "front-end" },
{ "text": "Fix subtle whitespace problem. Lesson: never copy and paste a suppression from a web page, and always run it through valgrind once no matter how perfect it is visually.", "position": "front-end" },
{ "text": "GTK: first cut at web contents as drag destination.", "position": "front-end" },
{ "text": "GTK: when doing a drag from a web page, pass a recent mouse down to gtk_drag_begin() so it has a better idea what time to pass to gdk_grab_pointer().", "position": "front-end" },
{ "text": "Fix a bug where we were getting a resize cursor near the top of the web contents area.", "position": "front-end" },
{ "text": "More web contents dragging.", "position": "front-end" },
{ "text": "Added stub native web worker support, including build support in preparation for integrating the native client build.", "position": "front-end" },
{ "text": "Linux web drag first cut.", "position": "front-end" },
{ "text": "First draft of web resource service; fetches data from a JSON feed and stores it in user prefs, where it can be used by the new tab page.", "position": "front-end" },
{ "text": "Bug 26522: In DOM mode, VoiceOver reads some mouseover text on web sites strangely https://bugs.webkit.org/show_bug.cgi?id=26522", "position": "front-end" },
{ "text": "Do not write a profile path on a BookmarkDragData object since a dragged url (javascript:...) on a web page does not belong to (the profile's) bookmark model.", "position": "front-end" },
{ "text": "DevTools: increase web inspector height", "position": "front-end" },
{ "text": "Chrome-part of disabling web fonts by default while still alowing SVG fonts", "position": "front-end" },
{ "text": "Fix the web inspector on linux.", "position": "front-end" },
{ "text": "1. Debugger front-end scripts are now updated from 'afterCompile' events. 2. V8 debugger message handlers are temporary removed when a new debugger agent is attaching to avoid failing on compile events. Review URL: http://codereview.chromium.org/100042", "position": "front-end" },
{ "text": "Fix a world leak caused by opening the Web Inspector. This was a regression caused by the InspectorController becoming refcounted.", "position": "front-end" },
{ "text": "Hook up a bit more plumbing to ExtensionView which should allow popup windows and widgets to work.Add in a quick hack that lets you bring up the web inspector. Review URL: http://codereview.chromium.org/67029", "position": "front-end" },
{ "text": "Fix a bug in the Web Inspector where it would show scripts from previous pages when toggling the debugger off and back on.", "position": "front-end" },
{ "text": "Fix ctrl+tab/ctrl+shift+tab were not working if web contents did not have focus (e.g., location bar or find bar had focus). Refactor the special keypress handling so these accelerators work when gtk widgets have focus.", "position": "front-end" },
{ "text": "Fixes a bug where you could not type any more in the Web Inspector's search field after the first match is selected in the Resources panel.", "position": "front-end" },
{ "text": "Fix a problem with clipping when printing almost all web pages.", "position": "front-end" },
{ "text": "Wire 'Inspect Element' action to the new DevTools (depending on the devtools flag): - Add new devtools IPC message - Expose WebView's hit target - Refactor dom_agent interaction not to send information known to client - Collect incoming messages on the client until frontend is loaded - Add Inspect Element scenario into the devtools_host_stub", "position": "front-end" },
{ "text": "DevToolsClient frontend improvements: 1. Move callbacks processing to the frontend 2. Dispatch calls directly to Javascript 3. Create CppBoundObject per agent flavor and wire it to IPC 4. Introduce Remote*Agent abstraction in the frontend", "position": "front-end" },
{ "text": "Unfork WebInspector frontend take 2: New DEPS and webkit/...", "position": "front-end" },
{ "text": "- Developer tools frontend is served from chrom-ui://devtools/tools.html", "position": "front-end" },
{ "text": "Don't let file:// URLs script Web URLs.", "position": "front-end" },
{ "text": "Fix a regression where the Web Inspector console would not animate in or out correctly.", "position": "front-end" },
{ "text": "Show exception messages again when evaluating bad expressions in the Web Inspector's console.", "position": "front-end" },
{ "text": "Make input in the Web Inspector console print before any output that might be added by the called function.", "position": "front-end" },
{ "text": "Added support for editing/deleting localStorage and sessionStorage items directly from Web Inspector.", "position": "front-end" },
{ "text": "When restoring a session, the browser is shown after a tab is selected causing the focus to be on the location bar (not tab contents for web pages). This CL ensures the tab decides where the focus should be after the browser is shown.", "position": "front-end" },
{ "text": "Bug 23983: Remove illegal HTML tags from Sunspider web pages", "position": "front-end" },
{ "text": "Remove old web app code it's no longer needed. Simplifies startup a little.", "position": "front-end" },
{ "text": "Make the shared shell dialog not use Windows types, as well as the web contents code that runs it. Review URL: http://codereview.chromium.org/19666", "position": "front-end" },
{ "text": "Generate a proper file name when dragging an image from a web page to the desktop.", "position": "front-end" },
{ "text": "Change Web Archive serialization back to the binary property list format.", "position": "front-end" },
{ "text": "Fix a bug when saving web pages that have a period in their title.", "position": "front-end" },
{ "text": "[Gtk+] Add configure option to enable Web Workers and enable it by default", "position": "front-end" },
{ "text": "Correctly render scroll bars on web frames by setting a matrix translation on the cairo surface in the canvas's GdkSkiaObjet that matches the canvas's matrix translation. Change rendering of some other widgets (buttons, entry fields, etc) that were being translated manually.", "position": "front-end" },
{ "text": "Pass the Cocoa dirty rect to the web view for adding to its dirty rect.", "position": "front-end" },
{ "text": "Make sure the icon thumbnail width/height is at least 1px in the Web Inspector's resource panel.", "position": "front-end" },
{ "text": "Make sure titles and bodies of web pages that come into the history system very late are indexed. Very slow pages (>20 seconds) would previously not get indexed.", "position": "front-end" },
{ "text": "Make the JavaScript profiler opt-in, so it does not slow down JavaScript all the time. Make the Profiles panel in the Web Inspector have an enable screen. Profiling now needs to be enabled before console.profile() works.", "position": "front-end" },
{ "text": "Make it so the user can't drag javascript: links to the desktop from web content or the bookmarks bar. Maintain the ability to drag javascript: links from web content to the bookmarks bar or to drag the javascript: link as plain text.", "position": "front-end" },
{ "text": "Add a mechanism to store and retrieve preferences for the Web Inspector.", "position": "front-end" },
{ "text": "Fixes the Profiles panel in the Web Inspector, which was broken by the JSValue base-class changes. Also renames some functions and variables in JavaScriptProfileNode.cpp that where title case.", "position": "front-end" },
{ "text": "Make the Web Inspector Resources panel open quicker and change graphs faster. There was some accidental n^2 logic at fault when updating the graph boundaries.", "position": "front-end" },
{ "text": "Fixes a regression where starting a debugging session in another Web Inspector window would not show any scripts. Also only attach the debugger to only the required Pages.", "position": "front-end" },
{ "text": "Fix a bug where we were truncating the last byte of images dragged from web content. This was caused by using the wrong helper method to create the storage in os_exchange_data. The method GetStorageForString adds an extra null byte to the data that we were removing at the wrong place in the code.", "position": "front-end" },
{ "text": "Makes breakpoints and debugging code during page load work in the Web Inspector's debugger. Specifically, this makes the source code for loading resources show up in the Scripts panel.", "position": "front-end" },
{ "text": "Adds support to the Web Inspector's Elements panel for fast tag name, class name, id and attribute name searching. The panel first tries using getElementById, getElementsByClassName and getElementsByTagName with the search query. Then does a slower search using XPath for partial matches, text and comment matches.", "position": "front-end" },
{ "text": "Changes how searching works in the Web Inspector's Elements panel. The search tasks are divided into chunks that are small units of work that are performed at a time interval. This change also prevents queries that will select all elements, since that isn't useful.", "position": "front-end" },
{ "text": "Adds MSAA/IAccessible exposure of web content.", "position": "front-end" },
{ "text": "Add the image/png mime-type to the Web Inspector images to make Mark and Dan happy.", "position": "front-end" },
{ "text": "Focus the DOM tree in the Web Inspector when a node is inspected. So when the search field has focus, the focus moves to the tree, allowing the arrow keys work. This can happen when using the new find in page feature.", "position": "front-end" },
{ "text": "Make the Web Inspector's toolbar icons darker when the mouse is pressed on them. This matches the standard NSToolbar look.", "position": "front-end" },
{ "text": "<rdar://problem/6240743> AXLoadComplete is sent for non-top level web areas and bogus web areas", "position": "front-end" },
{ "text": "Makes the node highlight always show up when hovering a node in the Web Inspector now that the highlight does not scroll to reveal the node. Also adds a hover effect in the inspector when hovering causes a highlight in the page. This ties the user hovering action to the highlight so it is clear what causes the highlight to appear.", "position": "front-end" },
{ "text": "Improves the Web Inspector node highlight so it does not scroll to reveal the node in the page.", "position": "front-end" },
{ "text": "Fixes a bug where the Profiles panel sidebar would be empty after closing and reopening the Web Inspector.", "position": "front-end" },
{ "text": "Add screenshots of searching in the Web Inspector.", "position": "front-end" },
{ "text": "Don't let a malicious web site open an unbounded number of constrained popups.", "position": "front-end" },
{ "text": "Reorganize the declarations to have some grouping and logical ordering in tab contents and web contents. Reorder the derived classes overrides to match, and reorder the definitions of the functions to match the order in the header file.", "position": "front-end" },
{ "text": "Add new screenshots of the Web Inspector's Scope Variables pane.", "position": "front-end" },
{ "text": "Add another screenshot of the Web Inspector.", "position": "front-end" },
{ "text": "Add new screenshots of the Web Inspector.", "position": "front-end" },
{ "text": "Fixes two crashers in saving page: 1. GetTabID was being called AFTER the process was destroyed, which means we could try and deref NULL. By caching the value we don't have to worry about whether the web contents goes away or not. 2. A PostTask was done, then we assumed the SaveItem still exists. That isn't the case if the user canceled the save.", "position": "front-end" },
{ "text": "<rdar://problem/5060439> Web elements should have an AXTopLevelUIElement", "position": "front-end" },
{ "text": "Adds console.dirxml support to the Web Inspector.", "position": "front-end" },
{ "text": "Fix an assertion when showing the Web Inspector", "position": "front-end" },
{ "text": "Fixes the Web Inspector flashing white while resizing after highlighting a page element. Calling disableScreenUpdatesUntilFlush when attaching and detaching the Inspector page highlight is bad, since the browser window might not flush again for a while. So screen updates could be disabled for long periods of time, causing backing store flashing while resizing. There is no need to call disableScreenUpdatesUntilFlush when attaching or detaching the child window.", "position": "front-end" },
{ "text": "Correctly remembers the attached state of the Web Inspector so it opens in that state for the next window, or next launch.", "position": "front-end" },
{ "text": "Fixes a bug where Safari's find banner would be permanently hidden when attaching or closing the Web Inspector while attached.", "position": "front-end" },
{ "text": "Remember the docked state of the Web Inspector, so it can be reopened docked if it was last docked.", "position": "front-end" },
{ "text": "Make the docked Web Inspector resizable.", "position": "front-end" },
{ "text": "Remove unneeded header imports from some Web Inspector files.", "position": "front-end" },
{ "text": "Remove the call to WKNSWindowMakeBottomCornersSquare on the Web Inspector's window. This isn't needed anymore since the window style masks used always have square bottom corners.", "position": "front-end" },
{ "text": "Make attaching and detaching the Web Inspector instantaneous. This also preserves the current view, other state, and keeps the script debugger attached.", "position": "front-end" },
{ "text": "<rdar://problem/3563671> VO doesn't highlight characters when interacting when static text in web areas", "position": "front-end" },
{ "text": "<rdar://problem/6038106> AXChildren returned for this web area is null", "position": "front-end" },
{ "text": "Added JavaScript syntax highlighting to the Web Inspector.", "position": "front-end" },
{ "text": "Combine the Web Inspector's JavaScript resources into one large script file to speed up loading of the Inspector.", "position": "front-end" },
{ "text": "Use tabIndex in the Web Inspector for focusable areas. https://bugs.webkit.org/show_bug.cgi?id=19583", "position": "front-end" },
{ "text": "<rdar://problem/5983804> Editable web areas do not properly report the AXFocused attribute", "position": "front-end" },
{ "text": "Bug 12983: Web Inspector break on the debugger keyword <https://bugs.webkit.org/show_bug.cgi?id=12983>", "position": "front-end" },
{ "text": "Bring the Web Inspector forward when the debugger pauses.", "position": "front-end" },
{ "text": "<rdar://problem/5966961> REGRESSION: Font previews in the Web Inspector always show in Lucida Grande (not the real font)", "position": "front-end" },
{ "text": "Fixes a bug where the Web Insepctor would jump back to Elements each time it is opened instead of staying at the last selected panel.", "position": "front-end" },
{ "text": "<rdar://problem/5933759> REGRESSION: Frames don't appear as AX children of the top level web area", "position": "front-end" },
{ "text": "Tweak the Web Insector toolbar look to be smaller when attached to the inspected page.", "position": "front-end" },
{ "text": "Fix attaching and detaching the Web Inspector. This change removes the clunky animation that never looked right and was causing issues where the inspected WebView would get into a no useable state.", "position": "front-end" },
{ "text": "Shorten URLs shown in the Web Inspector to the file name. This makes finding files in the Console or the Scripts panel easier.", "position": "front-end" },
{ "text": "<rdar://problem/5060458> Elements without AXActions should not return kAXErrorFailure <rdar://problem/3438014> Might need accessibility solution for context menus in web pages", "position": "front-end" },
{ "text": "Remove the Drosera project, code and resources since it has been replaced with the Web Inspector's debugger. Removes references to Drosera in various scripts and makefiles.", "position": "front-end" },
{ "text": "Removes WebScriptDebugServer files and related calls. This removes the hooks that Drosera uses for debugging. Now that the Web Inspector has a better debugger, we don't need these anymore.", "position": "front-end" },
{ "text": "Changes the Web Inspector node highlight to be less aggressive and only highlight when hovering over the selected node in the DOM tree or breadcrumbs. You can highlight on hover for any node if you hold down the Alt/Option key while hovering.", "position": "front-end" },
{ "text": "Fixes the bug where the Web Inspector would flash white while resizing. This was cause by deferring the window creation.", "position": "front-end" },
{ "text": "Add a new WebInspector.Object base class that will be used for a few objects in the Web Inspector to support listeners on any object. This will help add more abstraction to the Inspector.", "position": "front-end" },
{ "text": "Remove many unused Web Inspector images.", "position": "front-end" },
{ "text": "Adds the UI portions of the Scripts panel to the Web Inspector. The Scripts panel has not been added to the toolbar yet.", "position": "front-end" },
{ "text": "A more complete fix for: can't drag the Web Inspector when grabbing in the toolbar area. Makes dragging under the search field in the empty space work again.", "position": "front-end" },
{ "text": "Fix Bug 14276: Element highlight also covers Web inspector", "position": "front-end" },
{ "text": "Fix <rdar://5713302> Web Inspector on Windows is not using the localized strings", "position": "front-end" },
{ "text": "Fix for <rdar://problem/5698481> REGRESSION: Web Inspector source view gutter double divider and no padding", "position": "front-end" },
{ "text": "Fix <rdar://problem/5652740> Crash occurs at WebCore::Widget::getView() after dragging file into window that contains web page ( http://www.econocraft.com/flood_arch.htm )", "position": "front-end" },
{ "text": "Fix <rdar://5346832> Infinite recursion when opening Web Inspector on more than one tab", "position": "front-end" },
{ "text": "* kjs/JSImmediate.h: (KJS::JSImmediate::getTruncatedInt32): Remove too-strong assert that was firing constantly and preventing even basic web browsing from working in a debug build. This function is used in many cases where the immediate value is not a number; the assertion could perhaps be added back later with a bit of reorganization.", "position": "front-end" },
{ "text": "Use the navigational web actions in the toolbar", "position": "front-end" },
{ "text": "<rdar://problem/5424801> REGRESSION (r25151): Web page area of window doesn't redraw if page isn't loaded", "position": "front-end" },
{ "text": "Work around a bug in Qt's QHttp implementation and get web pages to load again.", "position": "front-end" },
{ "text": "<rdar://problem/5221986> selection in web areas doesn't seem to be working for text navigation", "position": "front-end" },
{ "text": "<rdar://problem/5145011> Allow attachment view of web object to handle accessibility actions", "position": "front-end" },
{ "text": "Update web inspector to account for border-fit.", "position": "front-end" },
{ "text": "Fix for Radar bug #4679426, golden gate bridge Web site layout broken.", "position": "front-end" },
{ "text": "Fix for bug 6666, pseudo-element rules incorrectly displayed in Web Inspector.", "position": "front-end" },
{ "text": "Land support for a style method on DOMAttr from JS that will allow the Web Inspector to include presentational attributes in the style list.", "position": "front-end" },
{ "text": "- created module, first cut at Web Kit Open Source Project scripts", "position": "front-end" },
{ "text": "Fix for 3992440, text not wrapping correctly on half moon bay web site. Refine an incorrect optimization I added to be less restrictive.", "position": "front-end" },
{ "text": "Fixed <rdar://problem/3827799> repro. crash with IBM Rational ClearCase Web under Safari (Java/LiveConnect-related)", "position": "front-end" },
{ "text": "Fix for 3787133, some web pages print with many blank pages. Make sure to use the real page print rect and not a damage rect that can be changed when intersected with the clip regions of the web page.", "position": "front-end" },
{ "text": "Darin made an internal notification have the Web prefix.", "position": "front-end" },
{ "text": "Fixed: <rdar://problem/3737864> Can not download image from web by using drag and drop", "position": "front-end" },
{ "text": "Fixed: <rdar://problem/3640423>: (REGRESSION: can't paste text copied from web page into Excel (due to HTML on the pasteboard?))", "position": "front-end" },
{ "text": "setStrokeColor and setFillColor now support old school web color string, oswcs+alpha, gray, gray+alpha, rgba, and cmyka.", "position": "front-end" },
{ "text": "Fixed: <rdar://problem/3631431>: web archive of .Mac welcome page renders has gaps in layout <rdar://problem/3631470>: news.google.com web archive has a different font than the live site", "position": "front-end" },
{ "text": "Fixed some spacing issues in reconstructed source and web archives that were caused by a malformed doc type string that we were constructing.", "position": "front-end" },
{ "text": "Fixed: INPUT images are not part of web archives.", "position": "front-end" },
{ "text": "Made dragging of web archives work.", "position": "front-end" },
{ "text": "Fixed: <rdar://problem/3576070>: REGRESSION: web view won't accept drag of webloc file", "position": "front-end" },
{ "text": "- fixed <rdar://problem/3484465>: REGRESSION (118): button click does not take focus away from <textarea>; breaks Outlook Web Access", "position": "front-end" },
{ "text": "Fix for 3507164, scrolling really slow on hixie's web forms spec page. Hixie has 12 little transparent layers at various points on this page, and beginning/ending transparency on only those 12 layers as you scroll is enough to kill scrolling performance.", "position": "front-end" },
{ "text": "- fixed <rdar://problem/3466082>: 7B85/111: Crash viewing web page ([WebView setNextKeyView:])", "position": "front-end" },
{ "text": "Netscape plugins were being improperly positioned. I noticed this when I put the web view into a window with borders around it (Carbon metal window, but I would imagine Cocoa metal would do it too).", "position": "front-end" },
{ "text": "3032718 - I-beam cursor behavior different between web view and text view", "position": "front-end" },
{ "text": "Fixed 3100084 - REGRESSION: web page is not first responder after visiting web page", "position": "front-end" },
{ "text": "- fixed 3082660 - REGRESSION: one ListImp leaks opening/closing nearly empty web page", "position": "front-end" },
{ "text": "- fixed 3075777 -- hysteresis for dragging links on web pages is still too large", "position": "front-end" },
{ "text": "- fixed 3059266 -- REGRESSION: clicking in web view when location field is focused does not focus web view", "position": "front-end" },
{ "text": "Add text/xml to our list of MIME types that should use the Web view. With this fix we now render XML and XHTML correctly!", "position": "front-end" },
{ "text": "- don't set nil data on the web file db - store absolute URLs in the db, not base URL/path combination URLs - support for multiple hosts with the same built-in icon", "position": "front-end" },
{ "text": "- fixed 3027927 -- selected text fields do not cause the web view to scroll to reveal them", "position": "front-end" },
{ "text": "Make user stylesheet changes dynamic. Web documents will now update as the user stylesheet is applied and unapplied. Altered how reapplyStyles works a bit.", "position": "front-end" },
{ "text": "Lots of form control changes. - Inputs and textareas now respond to setFont and can have their font set by the Web page explicitly. These fields emulate the WinIE behavior of defaulting to the UI system font and only picking up new fonts if they are explicitly specified on the element itself. - Buttons and selects use the small versions now. - Stopped trying to align controls along baselines of their interior text. Konqueror is the only browser that does this, and it looks bad on many pages. With this patch controls align along their bottom borders (which extend slightly below the baseline of surrounding text). This matches Gecko, MacIE, and WinIE behavior. - Stopped using monospace for textareas and inputs. - Fixed a bug with inputs not calling setScrollable on their cells.", "position": "front-end" },
{ "text": "- fixed 3015705 -- Command-up-arrow and -down-arrow should go to beginning and end of web page", "position": "front-end" },
{ "text": "This checkin adds support for querying the selected style set, for querying the preferred style set, and for changing the selected style set dynamically. With this checkin, a Web page in Alexander now has the capability to present its own alternate stylesheet UI in the page and to toggle between sets using script.", "position": "front-end" },
{ "text": "* WebCoreSupport.subproj/IFWebCoreBridge.mm: Added a lot of assertions that I had used while debugging. (-[IFWebCoreBridge didRedirectWithHandle:fromURL:]): Commented out the line of code that calls [serverRedirectTo:forDataSource:]. Our old code was sending this to the web controller (that was a bug). But if we send it to the location change handler, then we confuse Alexander. We may return to this later, uncomment it, and change the interface so the client can tell what is being redirected. We'll need to do that if we want the activity window to show redirected URLs at the time of the redirect.", "position": "front-end" },
{ "text": "* WebView.subproj/IFWebView.mm: (-[IFWebView initWithFrame:]): Remove code that makes us the first responder. That's up to the higher levels, not the web view.", "position": "front-end" },
{ "text": "File needed to isolate web data source allocation from web core.", "position": "front-end" },
{ "text": "Added support for web page URL requests. Fixed a warning", "position": "front-end" },
{ "text": "Fixed some geometry issues with drawing the web page view, and removed some of the ugly, hard-coded hacks that helped us to get this far. I also removed the unneeded double-buffering from the view drawing.", "position": "front-end" },
{ "text": "Fix import fix on react or react dev (#41950)", "position": "front-end" },
{ "text": "Adds experimental support for running TS Server in a web worker (#39656)", "position": "front-end" },
{ "text": "feat: re-impl react class name fix", "position": "front-end" },
{ "text": "Fixing react defaultize+generic default props interaction (#27088)", "position": "front-end" },
{ "text": "Batch enumerateFiles for multiple configurations into a single web request", "position": "front-end" },
{ "text": "Fix #15463: use intersection types to emulate spread in generic react components (#15851)", "position": "front-end" },
{ "text": "For React Component class, we fill in missing type parameter and instantiate the constructor signature with the new type arguments.", "position": "front-end" },
{ "text": "When creating react namespace identifier, set its parent to jsx opening element in the parse tree This helps in resolving the react identifier correctly and Fixes #11654", "position": "front-end" },
{ "text": "When emitting react code, replace HTML numeric entities with their encoded characters", "position": "front-end" },
{ "text": "Recursively check union type of react components for constructor/call", "position": "front-end" },
{ "text": "Additional fixes for React emit.", "position": "front-end" },
{ "text": "pretty output for react jsx", "position": "front-end" },
{ "text": "Fix React whitespace emit #4376", "position": "front-end" },
{ "text": "Fix React emit for spread attributes when they are the first attribute", "position": "front-end" },
{ "text": "support '|>', '=>' in front-end tokenizer", "position": "front-end" },
{ "text": "screen web collections on valid groups", "position": "front-end" },
{ "text": "zotero: group libraries for web connection", "position": "front-end" },
{ "text": "wip on web group libraries", "position": "front-end" },
{ "text": "Improve Web Zotero Feedback / Support", "position": "front-end" },
{ "text": "allow enter key to click active button in web dialogs (#6952)", "position": "front-end" },
{ "text": "use react for link popup (#6605)", "position": "front-end" },
{ "text": "set web font in initial preview", "position": "front-end" },
{ "text": "use in-memory cache of web resources", "position": "front-end" },
{ "text": "use rmarkdown defaults in react front end", "position": "front-end" },
{ "text": "allow react elements for toolbar buttons", "position": "front-end" },
{ "text": "change warning to debug messages since they should be prevented by the frontend refactor addDirectories function to avoid repeating code", "position": "front-end" },
{ "text": "fix failure to react to shiny viewer pref change", "position": "front-end" },
{ "text": "fix typo and compiler error, have frontend handle the reversal of the match list", "position": "front-end" },
{ "text": "pass error messages to frontend display the number of failures to the user", "position": "front-end" },
{ "text": "ensure main window web control gets focus on RStudio startup", "position": "front-end" },
{ "text": "add unique IDs to New Shiny Web App dialog box", "position": "front-end" },
{ "text": "notify front-end when fonts are ready", "position": "front-end" },
{ "text": "always remember opening web page, and query for viewer URL; fixes #2747", "position": "front-end" },
{ "text": "scope window closing handlers to web / desktop as appropriate", "position": "front-end" },
{ "text": "remove some web browser commands from context menu", "position": "front-end" },
{ "text": "invoke web window opener from desktop window opener", "position": "front-end" },
{ "text": "make it possible to open profiles in a web browser (fixes #1657)", "position": "front-end" },
{ "text": "adjust start of web toolbar correctly", "position": "front-end" },
{ "text": "add NEWS about web links in terminal", "position": "front-end" },
{ "text": "implement background highlighter for web links", "position": "front-end" },
{ "text": "add shiny icon to new shiny web app dialog", "position": "front-end" },
{ "text": "improve shiny web application templates", "position": "front-end" },
{ "text": "revised new shiny web app icon", "position": "front-end" },
{ "text": "open external links to same domain in same web view", "position": "front-end" },
{ "text": "move expanding/spacer section of web header into overlay", "position": "front-end" },
{ "text": "show at most 10 most recently used/shared projects in web popup", "position": "front-end" },
{ "text": "remove 'open project in new window' from web popup menu", "position": "front-end" },
{ "text": "implement tab stealing on file navigation in web mode (except for IE)", "position": "front-end" },
{ "text": "proper throttling for ace web workers", "position": "front-end" },
{ "text": "sync web completion pref immediately", "position": "front-end" },
{ "text": "always open a web window for pdf.js", "position": "front-end" },
{ "text": "viewer: enable save as web page for server mode", "position": "front-end" },
{ "text": "viewer: save as web page command", "position": "front-end" },
{ "text": "track resolved and observed state, and react appropriately", "position": "front-end" },
{ "text": "use the web handler for plot export on the mac", "position": "front-end" },
{ "text": "handle select-all keyboard shortcut in web views", "position": "front-end" },
{ "text": "Open AGPL link in a new tab on the web client", "position": "front-end" },
{ "text": "unsubscribe observers when web view controllers close", "position": "front-end" },
{ "text": "temporarily use web file dialogs for mac desktop", "position": "front-end" },
{ "text": "specify text/html content type for presentation web content", "position": "front-end" },
{ "text": "eliminate soft-wrap to margin column in web mode (caused horizontal scrollbar to appear over console input)", "position": "front-end" },
{ "text": "support custom fonts and importing of google web fonts", "position": "front-end" },
{ "text": "optional web font embedding", "position": "front-end" },
{ "text": "don't interact with zoom preview in web mode", "position": "front-end" },
{ "text": "add mark of the web to html preview template", "position": "front-end" },
{ "text": "add web file associations for osx and windows", "position": "front-end" },
{ "text": "satellite close event which works in both desktop and web modes", "position": "front-end" },
{ "text": "show web text input password dialog at 50 pixels from top", "position": "front-end" },
{ "text": "ubuntu mono support for web mode on ubuntu", "position": "front-end" },
{ "text": "tweak size of web menubar to be slightly larger", "position": "front-end" },
{ "text": "show/hide toolbar for web view", "position": "front-end" },
{ "text": "Cascading menus on web main menu were not dismissing on mouse movement", "position": "front-end" },
{ "text": "Change draft mode to build only webkit, in both desktop and web flavors", "position": "front-end" },
{ "text": "last tweaks required for web cran dialog", "position": "front-end" },
{ "text": "added the signedGradient varaible to the HOGDescriptor class. when true, use signed gradient for the angular histogram computation. default to false for backward compatibility.", "position": "front-end" },
{ "text": "Set ptr to NULL, so this method can be called repeatedly. This fixes a crash after unplugging web cam and trying to re-scan the cameras.", "position": "front-end" },
{ "text": "svn repository web references are replaced with links to git", "position": "front-end" },
{ "text": "Make PointerEvent an experimental web platform feature.", "position": "front-end" },
{ "text": "Gather data on Physical Web cached URL scenario", "position": "front-end" },
{ "text": "Partially clear cache at Physical Web start", "position": "front-end" },
{ "text": "Adds Add/Remove gesture recognizer on web view", "position": "front-end" },
{ "text": "[ios] Do not commit invalid URLs during web load.", "position": "front-end" },
{ "text": "Remove ios web shell MainView.xib.", "position": "front-end" },
{ "text": "Implements HaTS UI for the web dialog. - Removes Hats UI and uses the chrome dialog to directly to display the webpage by loading a local HTML. - Moves the instantiation from ExistingUserController to UserSessionManager since ExistingUserController is deleted after chrome instance restarts.", "position": "front-end" },
{ "text": "Remove settings button from Physical Web Activity", "position": "front-end" },
{ "text": "DevTools: fix front-end compilation problems after #399131", "position": "front-end" },
{ "text": "[Autofill] Check for sign-in state after Web Data request fulfillment", "position": "front-end" },
{ "text": "Load web content frames in V2 app's process. That is, --isolate-extensions is not enabled for V2 apps/platform apps.", "position": "front-end" },
{ "text": "Set the Accept-Language header in Physical Web requests", "position": "front-end" },
{ "text": "Include Web Animations when updating composited neutral keyframes", "position": "front-end" },
{ "text": "Avoid one temporary copy on web fonts decoding", "position": "front-end" },
{ "text": "[iOS] Upstream physical web classes.", "position": "front-end" },
{ "text": "Disallow navigation to documents not explicitly listed as web accessible.", "position": "front-end" },
{ "text": "Use onOptionsItemSelected in Physical Web activity", "position": "front-end" },
{ "text": "Stop clearing Physical Web cache when starting PW", "position": "front-end" },
{ "text": "Sort Physical Web URLs by distance", "position": "front-end" },
{ "text": "Add a settings button to Physical Web activity", "position": "front-end" },
{ "text": "Change Physical Web notification display behavior", "position": "front-end" },
{ "text": "Record UMA for Physical Web refresh resolve time", "position": "front-end" },
{ "text": "Remove Physical Web upgrade path", "position": "front-end" },
{ "text": "Record Physical Web status at Chrome startup", "position": "front-end" },
{ "text": "[ios Mojo] Added ios-only built-in Mojo resources for web ui.", "position": "front-end" },
{ "text": "Extensions: Report both app names when there is a web extent overlap.", "position": "front-end" },
{ "text": "Change iOS web matcher argument types to std::string.", "position": "front-end" },
{ "text": "[ios Mojo] Added built-in Mojo resources for web ui.", "position": "front-end" },
{ "text": "Ship Web Push subscription restrictions", "position": "front-end" },
{ "text": "Simplify Physical Web UrlManager logic", "position": "front-end" },
{ "text": "requestAutocomplete: remove from web platform", "position": "front-end" },
{ "text": "Store Physical Web URL data in memory", "position": "front-end" },
{ "text": "Store scan timestamps with Physical Web URLs", "position": "front-end" },
{ "text": "Initial CL for Web APKs", "position": "front-end" },
{ "text": "Add web shell matcher for address field.", "position": "front-end" },
{ "text": "Initial fake web server for Blimp.", "position": "front-end" },
{ "text": "Enable Physical Web feature by default", "position": "front-end" },
{ "text": "Ensure tapped Physical Web links open in a new tab", "position": "front-end" },
{ "text": "Add custom Context Menu for web shell.", "position": "front-end" },
{ "text": "Make AnimationEffectReadOnly.getComputedTiming() consistent with Web Animations spec", "position": "front-end" },
{ "text": "Add a Learn More link to the Physical Web opt-in activity", "position": "front-end" },
{ "text": "Revert of Web Animations: Expose timeline attributes on Animation object (experimental only) (patchset #1 id:1 of https://codereview.chromium.org/1942683002/ )", "position": "front-end" },
{ "text": "sandwich: List requests that couldn't be served by web page replay.", "position": "front-end" },
{ "text": "bluetooth: Move Web Bluetooth from OriginTrialEnabled to RuntimeEnabled.", "position": "front-end" },
{ "text": "Close IME on tapping on Blimp web content pane", "position": "front-end" },
{ "text": "Disable Physical Web notification on Wear.", "position": "front-end" },
{ "text": "Autofill: Check for common angular js prefix when filling exp month.", "position": "front-end" },
{ "text": "Remove support for the web manifest icon density member.", "position": "front-end" },
{ "text": "Provide web contents to Chrome's mojo services", "position": "front-end" },
{ "text": "tools/android/loading Add appengine frontend for Clovis", "position": "front-end" },
{ "text": "Record UMA for Physical Web state on debug actions", "position": "front-end" },
{ "text": "Simplify Physical Web hook in Chromium startup", "position": "front-end" },
{ "text": "Record UMA for Physical Web state", "position": "front-end" },
{ "text": "Enable deep-linking from notifications for recently used web apps on the Android home screen.", "position": "front-end" },
{ "text": "bluetooth: Enable Web Bluetooth on experimental framework", "position": "front-end" },
{ "text": "Implement receiving side of web notification inline replies", "position": "front-end" },
{ "text": "Disallow use of Web Bluetooth from cross-origin iframes.", "position": "front-end" },
{ "text": "bluetooth: Populate Web Bluetooth blacklist from variations:: parameter.", "position": "front-end" },
{ "text": "Store standalone web app data in WebappDataStorage as well as the homescreen intent.", "position": "front-end" },
{ "text": "Increase favicon size in Physical Web nearby URLs list from 16dp to 32dp", "position": "front-end" },
{ "text": "Improve clarity of Physical Web onboarding interstitial message", "position": "front-end" },
{ "text": "Improve clarity of the Physical Web opt-in notification message", "position": "front-end" },
{ "text": "Update disableAnimationsAndTransitions for web components and web animations", "position": "front-end" },
{ "text": "Add a kill switch for all of Web Bluetooth.", "position": "front-end" },
{ "text": "[ios] Cleaned up ios web shell from UIWebView code.", "position": "front-end" },
{ "text": "[ios] Switched web shell to use WebState for view and navigation.", "position": "front-end" },
{ "text": "blimp: Disable custom web fonts on the engine", "position": "front-end" },
{ "text": "Fix how Save-Page-As responds to web requests blocked by extensions.", "position": "front-end" },
{ "text": "[ImeWindow] Makes the web contents closed before the native window is closed.", "position": "front-end" },
{ "text": "Add Physical Web UMA for ListUrlsActivity referers", "position": "front-end" },
{ "text": "Add badge to web notifications.", "position": "front-end" },
{ "text": "bluetooth: Introduce Web Bluetooth mojom interface", "position": "front-end" },
{ "text": "[Reland] Enable AutoResize for Constrained Web Dialogs for Mac.", "position": "front-end" },
{ "text": "Make the modal sign in navigation button web ui.", "position": "front-end" },
{ "text": "Remove Web Bluetooth from Experimental in M50.", "position": "front-end" },
{ "text": "Revert of [Reland] Enable AutoResize for Constrained Web Dialogs for Mac. (patchset #2 id:60001 of https://codereview.chromium.org/1699763002/ )", "position": "front-end" },
{ "text": "Set a background for the Physical Web diagnostics NativePage", "position": "front-end" },
{ "text": "[DevTools] Fix more frontend compiler errors", "position": "front-end" },
{ "text": "Renew deprecation messages for Web Audio doppler effects", "position": "front-end" },
{ "text": "Add enterprise policy to turn off Web Bluetooth.", "position": "front-end" },
{ "text": "bluetooth: Add Web Bluetooth blacklist checks to readValue & writeValue.", "position": "front-end" },
{ "text": "Remove dead code related to Web Audio doppler effects", "position": "front-end" },
{ "text": "bluetooth: Add Web Bluetooth blacklist checks to getCharacteristic.", "position": "front-end" },
{ "text": "bluetooth: Add URLs for Web Bluetooth help links.", "position": "front-end" },
{ "text": "Revert of Release unused web views when under memory pressure. (patchset #5 id:100001 of https://codereview.chromium.org/1708643002/ )", "position": "front-end" },
{ "text": "Release unused web views when under memory pressure.", "position": "front-end" },
{ "text": "bluetooth: Add Web Bluetooth blacklist checks to requestDevice.", "position": "front-end" },
{ "text": "Contextually educate users where to discover Physical Web notifications", "position": "front-end" },
{ "text": "bluetooth: Enable Web Bluetooth through experimental framework", "position": "front-end" },
{ "text": "sandwich: Adds web page replay support for HTTPS", "position": "front-end" },
{ "text": "Use uint64_t instead of size_t inside the web cache manager code.", "position": "front-end" },
{ "text": "sandwich: Adds web page replay support for HTTP", "position": "front-end" },
{ "text": "Fire an accessible click event when a web node is clicked on.", "position": "front-end" },
{ "text": "Change Mac Web Notification style to banners instead of alert", "position": "front-end" },
{ "text": "Revert of [Reland] Enable AutoResize for Constrained Web Dialogs for Mac. (patchset #9 id:440001 of https://codereview.chromium.org/1446623003/ )", "position": "front-end" },
{ "text": "bluetooth: Initial BluetoothBlacklist implementation for Web Bluetooth.", "position": "front-end" },
{ "text": "[Offline pages] Fixes a crash when saving offline page for a destroyed web contents", "position": "front-end" },
{ "text": "[Offline page] Fixing the crash when bookmark editor accesses destroyed web contents", "position": "front-end" },
{ "text": "Improve clarity of Physical Web opt-in notification", "position": "front-end" },
{ "text": "Allow the root web area node to receive focus.", "position": "front-end" },
{ "text": "Update text on Physical Web opt-in interstitial for clarity", "position": "front-end" },
{ "text": "Add a button to launch the physical web activity from the settings page", "position": "front-end" },
{ "text": "Make sure the system default font is used in case of web fonts in page.", "position": "front-end" },
{ "text": "bluetooth: Initialize Bluetooth Adapter after first Web Bluetooth Interaction", "position": "front-end" },
{ "text": "DevTools: do not use ScriptFunctionCall in the front-end embedder.", "position": "front-end" },
{ "text": "Revert of DevTools: do not use ScriptFunctionCall in the front-end embedder. (patchset #1 id:1 of https://codereview.chromium.org/1577153002/ )", "position": "front-end" },
{ "text": "The context menu on the web page on Windows should be displayed when the long press gesture is released rather than while it is pressed.", "position": "front-end" },
{ "text": "Create public/{platform|web}/modules/webmidi for Web MIDI public classes", "position": "front-end" },
{ "text": "Fix web app url bar issues", "position": "front-end" },
{ "text": "bisect-builds.py: React to SIGINT while downloading", "position": "front-end" },
{ "text": "Convert android web media player sync points to use sync tokens.", "position": "front-end" },
{ "text": "bluetooth: Added Linux platform to Web Bluetooth flag", "position": "front-end" },
{ "text": "Disable Web Notifications in Incognito", "position": "front-end" },
{ "text": "Make WKWebView default for the web shell.", "position": "front-end" },
{ "text": "Set the keyWindow earlier for the web shell.", "position": "front-end" },
{ "text": "Add composition support for SVG Web Animation of x, y, dx, dy attributes", "position": "front-end" },
{ "text": "[DevTools] Turn NetworkConditionsSettingsTab into web component, move to network module.", "position": "front-end" },
{ "text": "Start Physical Web scanning on location perm grant", "position": "front-end" },
{ "text": "blimp: Route web gesture events to the renderer on the engine.", "position": "front-end" },
{ "text": "Implement native web notifications for mac", "position": "front-end" },
{ "text": "Take into account status bar when computing the frame of the web controller [reland]", "position": "front-end" },
{ "text": "Revert of Take into account the size of the status bar when computing the frame of the web controller. (patchset #1 id:1 of https://codereview.chromium.org/1580493005/ )", "position": "front-end" },
{ "text": "Minor additional fix to repair Web Speech on Mac OSX", "position": "front-end" },
{ "text": "Questionize Physical Web opt-in notification text", "position": "front-end" },
{ "text": "Take into account the size of the status bar when computing the frame of the web controller.", "position": "front-end" },
{ "text": "Implementation for Look Up on Force Touch. If the user force touched a word in the web content the Look Up dialog should pop up for the word.", "position": "front-end" },
{ "text": "Add UMA for Physical Web refresh", "position": "front-end" },
{ "text": "Add Physical Web resolutions on main looper", "position": "front-end" },
{ "text": "Increase the resolution of the Physical Web logo image resource", "position": "front-end" },
{ "text": "Tools to log all requests made to load a web page on Android.", "position": "front-end" },
{ "text": "Resubmit Supervised user web restrictions content provider", "position": "front-end" },
{ "text": "Parse Physical Web UMA cache more robustly", "position": "front-end" },
{ "text": "Record UMA for Physical Web settings fragment", "position": "front-end" },
{ "text": "Add Physical Web opt-in dialog", "position": "front-end" },
{ "text": "Read feature param for Physical Web experiment", "position": "front-end" },
{ "text": "[Reland] Preserve monotonic timestamp when converting from Core to Web input event", "position": "front-end" },
{ "text": "SVG Web Animations: Support targeting presentation attributes", "position": "front-end" },
{ "text": "Send profile paths and incognito information for web notifications", "position": "front-end" },
{ "text": "Intervention: Web Font adaptive timeout on 2G network", "position": "front-end" },
{ "text": "Split Physical Web Service UMA", "position": "front-end" },
{ "text": "Add Physical Web preference toggle", "position": "front-end" },
{ "text": "Upgrade Physical Web logo image quality", "position": "front-end" },
{ "text": "Revert of Supervised user web restrictions content provider (patchset #12 id:220001 of https://codereview.chromium.org/1452603002/ )", "position": "front-end" },
{ "text": "Supervised user web restrictions content provider", "position": "front-end" },
{ "text": "Split web shell project into an app and a library.", "position": "front-end" },
{ "text": "Make WebController isViewAlive method check if the web process is alive.", "position": "front-end" },
{ "text": "Add accessibility labels to elements in the web shell app.", "position": "front-end" },
{ "text": "Add a NULL-byte I missed when determining the PRK for Web Push", "position": "front-end" },
{ "text": "Fix crash in stable when reading Web Animated SVG animVals", "position": "front-end" },
{ "text": "Allow web requests for auto-whitelisted Public Session apps.", "position": "front-end" },
{ "text": "Make Web Animated SVG attributes responsive to animation timing updates", "position": "front-end" },
{ "text": "Make Web Animated SVG attributes responsive to baseVal mutations", "position": "front-end" },
{ "text": "Queue Physical Web UMA for upload on startup", "position": "front-end" },
{ "text": "[DevTools] Fix frontend host race and assert.", "position": "front-end" },
{ "text": "Drop [LegacyInterfaceTypeChecking] where trivial in Web Audio", "position": "front-end" },
{ "text": "Include the public keys in the Web Push CEK/nonce info", "position": "front-end" },
{ "text": "Clear SVG Web Animation effects when animations exit their fill phase", "position": "front-end" },
{ "text": "Change name of NativeTheme::instance() to make it clear it's web only. (e.g. for rendering blink controls)", "position": "front-end" },
{ "text": "Ignore title changes from WKWebView when the web process dies", "position": "front-end" },
{ "text": "Move content/renderer input handling for web input events to ui.", "position": "front-end" },
{ "text": "Set Background Color for Web View Content Views", "position": "front-end" },
{ "text": "Oilpan: move WorkerInspectorController's frontend channel to the heap.", "position": "front-end" },
{ "text": "This is to support the automation methods of AudioNode.connect() method. The current implementation does not return anything when these methods are executed. This feature improves the control flow and the readability of Web Audio JS code.", "position": "front-end" },
{ "text": "This is to support the automation methods of AudioParam object. The current implementation does not return anything when these methods are executed. This feature improves the control flow and the readability of Web Audio JS code.", "position": "front-end" },
{ "text": "Revert of Enable AutoResize for Constrained Web Dialogs for Mac. (patchset #4 id:650001 of https://codereview.chromium.org/1430023002/ )", "position": "front-end" },
{ "text": "[Telemetry] Move the log level of web page replay up to debug level", "position": "front-end" },
{ "text": "Enable AutoResize for Constrained Web Dialogs for Mac.", "position": "front-end" },
{ "text": "Disable Physical Web UMA", "position": "front-end" },
{ "text": "[Serialization] Add a new front-end argument to specify the path of the group info file. NFC", "position": "front-end" },
{ "text": "Conditionally enable behaviors by a frontend flag.", "position": "front-end" },
{ "text": "Teach the frontend about -output-filelist.", "position": "front-end" },
{ "text": "Teach the frontend about -filelist for input files.", "position": "front-end" },
{ "text": "Add frontend option -debug-time-compilation.", "position": "front-end" },
{ "text": "Add -linker-path frontend option to choose the linker", "position": "front-end" },
{ "text": "The frontend should stop if the stdlib failed to load", "position": "front-end" },
{ "text": "Remove unused -enable-availability-checking-in-implicit-functions frontend flag", "position": "front-end" },
{ "text": "Add a -dump-trc frontend option to print the type refinement context hierarchy", "position": "front-end" },
{ "text": "Add frontend option -disable-autolink-framework <framework>", "position": "front-end" },
{ "text": "Don't crash the frontend if a bad target is given", "position": "front-end" },
{ "text": "Debug Info: Remove an early exit that prevented the swift frontend from emitting indirect pieces — LLVM (ToT, 700) now supports this.", "position": "front-end" },
{ "text": "[driver] Remove the 'swift-fixit' symlink and introduce '-emit-fixits-path' frontend option that writes compiler fixits as source edits.", "position": "front-end" },
{ "text": "Remove -sil-devirt-threshold frontend option.", "position": "front-end" },
{ "text": "Let the frontend options handle multiple output files. This will be needed for split-llvm code generation. If multiple -o options are specified and only a single output file is needed (currently always), the last one wins. This is NFC.", "position": "front-end" },
{ "text": "Add frontend flag -import-module <name>.", "position": "front-end" },
{ "text": "[driver] Introduce '--update-code' which enables the driver to spawn invocations of 'bin/swift-update' with the related frontend options.", "position": "front-end" },
{ "text": "Add the frontend flag '-external-pass-pipeline-filename'", "position": "front-end" },
{ "text": "[ClangImporter] Add frontend option -dump-clang-diagnostics for debugging.", "position": "front-end" },
{ "text": "Add frontend option -objc-bridge-dictionary.", "position": "front-end" },
{ "text": "Add a -print-clang-stats frontend flag.", "position": "front-end" },
{ "text": "Add a -import-cf-types frontend option to enable the CF type-import logic.", "position": "front-end" },
{ "text": "Handle -target-abi as a frontend option and default it to darwinpcs for arm64/Darwin.", "position": "front-end" },
{ "text": "Add a frontend option -enable-native-blocks to stage native block generation.", "position": "front-end" },
{ "text": "Add an -enable-block-bridging frontend option we can hide disruptive changes to block bridging behind.", "position": "front-end" },
{ "text": "[driver] Pass -Xcc options down to frontend tools.", "position": "front-end" },
{ "text": "Add a -sil-opt-pass-count frontend flag.", "position": "front-end" },
{ "text": "Rename a bunch of variables named 'let' and react to the stdlib moving off of 'val'.", "position": "front-end" },
{ "text": "Teach the frontend how to pass through -Xllvm commands.", "position": "front-end" },
{ "text": "[frontend] Added a handful of options to force the frontend to assert or crash.", "position": "front-end" },
{ "text": "[driver] Emit real diagnostics in the driver and integrated frontend instead of just printing to stderr.", "position": "front-end" },
{ "text": "[Driver] Accept '-triple' as a frontend options.", "position": "front-end" },
{ "text": "[frontend] Added a comment to indicate that the branch for choosing a default output filename should never be used when invoking the frontend via the driver.", "position": "front-end" },
{ "text": "[driver] Implemented support for adding an additional output for a swiftmodule to the CommandOutput of frontend Commands.", "position": "front-end" },
{ "text": "[frontend] Add support for running SIL optimization passes in the integrated frontend if the optimization level is not zero.", "position": "front-end" },
{ "text": "[frontend] Adjusted the handling of -module-name in the integrated frontend to provide fallbacks and diagnostics.", "position": "front-end" },
{ "text": "[frontend] Add support for parsing the action which the integrated frontend should perform.", "position": "front-end" },
{ "text": "[driver] Add support for passing arguments after -- down to the frontend as-is if the driver is in immediate mode.", "position": "front-end" },
{ "text": "[frontend] Added support for parsing the “-emit-verbose-sil” frontend argument.", "position": "front-end" },
{ "text": "Initial support for an integrated frontend in swift_driver.", "position": "front-end" },
{ "text": "Code completion: now frontend rejects accessing types through expressions (rdar://14489286), adjust code completion results", "position": "front-end" },
{ "text": "rename tools/swift/Frontend.{h|cpp} -> Helpers.{h|cpp} to avoid hopelessly confusing me with the Frontend library. Add some more include guards around the real Frontend.h header.", "position": "front-end" },
{ "text": "[frontend] Add '-parse-as-library' at the tablegen'ed frontend options.", "position": "front-end" },
{ "text": "Introduce parsing of frontend options using LLVM's tablegen'ed Options infrastructure.", "position": "front-end" },
{ "text": "Some frontend cleanup.", "position": "front-end" },
{ "text": "Basic filesystem via the web traversal", "position": "front-end" },
{ "text": "add a sketch of some high level web page stuff with some basic sections. Nothing very serious here of course, and suggestions welcome.", "position": "front-end" },
{ "text": "switch the frontend to generate swift_retain_noresult calls instead of swift_retain calls. The pertinent difference is that the former can be marked nocapture, allowing general LLVM optimizations more flexibility.", "position": "front-end" },
{ "text": "bpo-40767: Allow pure Wayland to get default XDG web browser (GH-20382)", "position": "front-end" },
{ "text": "bpo-37305: add MIME type for Web App Manifest (#14199)", "position": "front-end" },
{ "text": "Issue #18010: Fix pydoc web server search to handle package exceptions", "position": "front-end" },
{ "text": "Issue #13703: add a way to randomize the hash values of basic types (str, bytes, datetime) in order to make algorithmic complexity attacks on (e.g.) web apps much more complicated.", "position": "front-end" },
{ "text": "#1577756: svnversion doesn't react to LANG=C, use LC_ALL=C to force English output. (backport from rev. 52970)", "position": "front-end" },
{ "text": "#1577756: svnversion doesn't react to LANG=C, use LC_ALL=C to force English output.", "position": "front-end" },
{ "text": "add two more extensions: - .wsdl --> Web Service Definition Language - .xpdl --> XML Process Definition Language", "position": "front-end" },
{ "text": "Update URL, and remove e-mail address reference (readers can get it from the Web page)", "position": "front-end" },
{ "text": "This is a trivial command line utility to print MD5 checksums. I published it on the web as http://www.python.org/2.1/md5sum.py so I thought I might as well check it in.", "position": "front-end" },
{ "text": "Update link to LaTeX2HTML web site.", "position": "front-end" },
{ "text": "New module webbrowser. Easy-to-use controller objects to make using a Web browser as a help/information browser easy across platforms.", "position": "front-end" },
{ "text": "Collection of classes and convenience functions to control external Web browsers.", "position": "front-end" },
{ "text": "Added comment with web location of bsddb windows port.", "position": "front-end" },
{ "text": "Update commentary. For most stuff, point people to the web page", "position": "front-end" },
{ "text": "Added comment about where to find details on python-mode.el, pointing to the Web site.", "position": "front-end" },
{ "text": "Straight from Jeffrey Ollie's web page.", "position": "front-end" },
{ "text": "New versions straight from Jeffrey Ollie's web site", "position": "front-end" },
{ "text": "Updated web ref and version#. Folded some long lines.", "position": "front-end" },
{ "text": "Upgrade to React 17", "position": "front-end" },
{ "text": "Add link to react example in extension-examples repo", "position": "front-end" },
{ "text": "Clean up some react lint", "position": "front-end" },
{ "text": "Clean up eslint config and add jest and react linting", "position": "front-end" },
{ "text": "Add key at top level to avoid React console warnings.", "position": "front-end" },
{ "text": "Fix React key error", "position": "front-end" },
{ "text": "* The Qt console frontend now ignores cross chatter from other frontends. * Fixed parent headers missing from OutStreams in both kernels.", "position": "front-end" },
{ "text": "Added arguments to the Qt console frontend script for connecting to an existing kernel and for specifying an IP and specific ports.", "position": "front-end" },
{ "text": "Created a proper IPython script from the console frontend demo.", "position": "front-end" },
{ "text": "Greatly increased frontend performance by improving kernel stdout/stderr buffering.", "position": "front-end" },
{ "text": "Moving old frontend stuff out of the way.", "position": "front-end" },
{ "text": "Added a flush method to the SubSocketChannel. The Qt console frontend now uses this method to ensure that output has been processed before it writes a new prompt.", "position": "front-end" },
{ "text": "Initial checkin of Qt frontend code.", "position": "front-end" },
{ "text": "BUG: Make the frontend compatible with wxPython 2.6", "position": "front-end" },
{ "text": "BUG: Fix minor frontend bugs", "position": "front-end" },
{ "text": "Disabled ipython sync frontend due to interference with 'show_in_pager' hook.", "position": "front-end" }
]