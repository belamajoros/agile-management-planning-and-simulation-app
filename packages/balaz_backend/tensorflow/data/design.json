[
{ "text": "Use designated initialisers for the db disassembler interface to help with finding the struct when searching for one of its members.", "position": "design" },
{ "text": "In HTML output, for lists that have an -indent argument, just use a uniform indentation in CSS adapted to the viewport width and ignore the value of the argument taken from mdoc(7). While author-specified widths somewhat work as a micro-optimization in terminal and typeset output, they are nothing but harmful in HTML style= attributes because they break responsive design, whereas using a reasonable default indent almost never results in ugly output. Admittedly, the author-specified width might occasionally look even better, but only slightly so, and only for some viewport sizes. Based on guidance provided by John Gardner.", "position": "design" },
{ "text": "* CSS was created to reduce re-specifying design styles: specify table cell color once at the top, and do not repeat it 82 times * Replace bright blue table border with gray, which is easier on the eyes and matches the gray LLVM documentation color scheme", "position": "design" },
{ "text": "[CSSimplify] Avoid using designated initializer for `ArgumentInfo` (currently unsupported on Windows)", "position": "design" },
{ "text": "New CSS for HTML table design", "position": "design" },
{ "text": "Updated core/css/properties/README.md with new design.", "position": "design" },
{ "text": "[Typed CSSOM]New design for computed styles which includes custom properties", "position": "design" },
{ "text": "Update CSS on Website Settings dialog to match latest design.", "position": "design" },
{ "text": "DevTools: brush up responsive design toolbar css.", "position": "design" },
{ "text": "DOC Updates entire website design (#14849)", "position": "design" },
{ "text": "Fix broken link to web designer", "position": "design" },
{ "text": "ENH: faster design in FastICA", "position": "design" },
{ "text": "BUG: address ill-conditionned designs in Lars", "position": "design" },
{ "text": "WEB: update the designer's URL", "position": "design" },
{ "text": "Make the design even more modular for MinCovDet.", "position": "design" },
{ "text": "redesign the denoising example", "position": "design" },
{ "text": "- bug fix in stop criterion of Elastic-Net - rewriting callback system to handle objective value computation and density. It is designed to be usable by other iteration procedures such as proximal based optimization schemes.", "position": "design" },
{ "text": "New design to hide libsvm data structure from the users.", "position": "design" },
{ "text": "Use method specifically designed for data frames containing columns which are lists", "position": "design" },
{ "text": "Fix the design problem with delayed algorithm sync.", "position": "design" },
{ "text": "Add driver for Synopsys Designware Watchdog timer.", "position": "design" },
{ "text": "DesignWare PCIe driver: Don't call bus_generic_attach() twice. bus_generic_attach() should be called from the attach function of the real implementation, not from the common init function.", "position": "design" },
{ "text": "Use designated initializers for libc pthread stubs' jump table.", "position": "design" },
{ "text": "Revert the whole getlocalbase() set of changes while a different design is hashed out.", "position": "design" },
{ "text": "lualoader: improve the design of the brand-/logo- mechanism", "position": "design" },
{ "text": "Make makesyscalls.lua initialize 'struct sysent' entries using c99 designated initializers. This makes it easier to modify 'struct sysent' layout.", "position": "design" },
{ "text": "Driver for 4x10Gb Ethernet reference NIC FPGA design for NetFPGA SUME development board.", "position": "design" },
{ "text": "Use naming nomenclature used in DesignWare TRM. Use naming nomenclature used in DesignWare TRM. This driver was written by using Altera (now Intel) documentation for Arria FPGA manual. Unfortunately this manual used very different (and in some cases opposite naming) for registers and descriptor fields. Unfortunately, this makes future expansion extremely hard.", "position": "design" },
{ "text": "Improve DesignWare PCIe driver: - only normal memory window is mandatory, prefetchable memory and I/O windows should be optional - full PCIe configuration space is supported - remove duplicated check from function for accessing configuration space. It is already contained in pci_dw_check_dev()", "position": "design" },
{ "text": "Continuation of multi page mbuf redesign from r359919.", "position": "design" },
{ "text": "Remove FreeBSD 7 conditional code... We've had a lot of other changes since then and al_eth appears only in the Annapurna ARM designs which arrived in the tree after that.", "position": "design" },
{ "text": "Use designated initializers for seminfo.", "position": "design" },
{ "text": "Add driver for DesignWare PCIE core, and its Armada 8K specific attachement.", "position": "design" },
{ "text": "o Add support for multi-port instances of Synopsys DesignWare APB GPIO Controller. o Rename the driver to dwgpio.", "position": "design" },
{ "text": "Use designated initializers for vmm_ops.", "position": "design" },
{ "text": "Use traditional 'p' local to designate td->td_proc in kern_mmap.", "position": "design" },
{ "text": "Add ACPI entries for Synopsys Designware UARTs used on ARM platforms", "position": "design" },
{ "text": "Add note that I'm the defacto maintainer of libegacy, our compat shims for building bootstrap tools that use new features on systems too old to have those new features. The world view for this part of the build is unique to the whole build process and continuty of design for new compat shims help this library remain viable.", "position": "design" },
{ "text": "r329522 created problemss with commands that enter the TIMEDOUT state but are successfully returned by the card (usually due to an abort being issued as part of timeout recovery). Remove what amounts to an insufficient KASSERT, and don't overwrite the state value. State should probably be re-designed, and that will be done with a future commit.", "position": "design" },
{ "text": "FUSE: The FUSE design expects writethrough caching", "position": "design" },
{ "text": "elfdump: use designated array initialization for note types", "position": "design" },
{ "text": "Improve R_AARCH64_TLSDESC relocation. The original code did not support dynamically loaded libraries and used suboptimal access to TLS variables. New implementation removes lazy resolving of TLS relocation - due to flaw in TLSDESC design is impossible to switch resolver function at runtime without expensive locking.", "position": "design" },
{ "text": "Print type designator 'D' for the KF_TYPE_DEV files.", "position": "design" },
{ "text": "[ig4] Fix I/O timeout issue with Designware I2C controller on AMD platforms", "position": "design" },
{ "text": "if_dwc_rk: Add DesignWare driver for RockChip SoCs.", "position": "design" },
{ "text": "Create designated workqueue for each mlx5en(4) device instance.", "position": "design" },
{ "text": "Use C99 designated initializers for struct execsw", "position": "design" },
{ "text": "Add info about c99 designationed initializers.", "position": "design" },
{ "text": "Maintain alignment of in-code 64-bit quantities by design rather than luck. If these are not aligned, the linker has to emit a different type of relocation that the early boot self-relocation code cannot handle, even in principle, resulting in them being set to zero and the kernel crashing.", "position": "design" },
{ "text": "Use designated initializers for pmc sysent and module data.", "position": "design" },
{ "text": "acpidump: use C99 designated initializers", "position": "design" },
{ "text": "Use designated initializers for kevent_copyops.", "position": "design" },
{ "text": "Add support for audio on I2S based DesignWare HDMI controllers.", "position": "design" },
{ "text": "Split the DesignWare HDMI-specific code from imx6_hdmi.c into a separate file and add a generic DT binding that takes advantage of the extres framework for setting up clocks.", "position": "design" },
{ "text": "rc.d/zfsbe: a new script designed for boot environment support", "position": "design" },
{ "text": "Use C99 designated initializers to create the armv6 cpu_functions structs. This will help with a later cleanup of what functions we implement.", "position": "design" },
{ "text": "Define libcpp's HAVE_DESIGNATED_INITIALIZERS in a defined and portable way.", "position": "design" },
{ "text": "Initialize lists of signals using C99 designators", "position": "design" },
{ "text": "Fix quirky style of an element in the content settings dialog.", "position": "design" },
{ "text": "Use UNUSED_PARAM instead of C style comments.", "position": "design" },
{ "text": "Revert 179608 > views: Remove simple_message_box_win.cc in favor of simple_message_box_views.cc > > simple_message_box_win.cc is not be needed nor compatible with the desktop-aura > transition. It also uses the win32 appearance not the new Chrome style > appearance currently in development. So it's bad twice ;) > > Just kill it and that eases the work that will need to be done later. > > By enabling simple_message_box_views on Windows means that it will be used for all > ShowMessageBox() dialogs instead of current Windows MessageBox. > > BUG=166075,54988 > R=ben@chromium.org > > Review URL: https://codereview.chromium.org/12042083", "position": "design" },
{ "text": "Update the Chromium style checker plugin so that it can scan the entire public class hierarchy for ref-counting problems. This is to detect situations where a RefCounted type implements some Delegate-type class and the Delegate may be directly deleted, even if the RefCounted type may not be.", "position": "design" },
{ "text": "Browser Plugin: Trivial change to fix style and update comments.", "position": "design" },
{ "text": "Adjust Win Views textfield IME composition styling and behavior.", "position": "design" },
{ "text": "Revises the visual style of progress bar for ChromeOS.", "position": "design" },
{ "text": "Minor style cleanup in the PhoneField class:", "position": "design" },
{ "text": "Remove unused banner styles from uber_shared.css", "position": "design" },
{ "text": "Enforce consistent include style for ICU headers.", "position": "design" },
{ "text": "NaCl: Fix '*' spacing style in nacl_helper_linux.cc", "position": "design" },
{ "text": "Fix some pecularities in my C++ style for achuith@.", "position": "design" },
{ "text": "Replacement app_list.ico from designer (smaller, 8-bit assets).", "position": "design" },
{ "text": "Changed history menu style to match new C++ menus", "position": "design" },
{ "text": "Roll ICU and convert include style to standard Chromium style, i.e. third_party/...", "position": "design" },
{ "text": "Rename AppNotifyChannelUIImpl::InfoBar to AppNotifyChannelUIInfoBarDelegate for consistency with other infobars, and because the style guide pushes people away from member classes when not necessary.", "position": "design" },
{ "text": "Rename HungPluginTabHelper::InfoBarDelegate to HungPluginInfoBarDelegate for consistency with other infobars, and because the style guide pushes people away from member classes when not necessary.", "position": "design" },
{ "text": "[Autofill] A bit of style cleanup", "position": "design" },
{ "text": "Fix some code style issues in fling gesture curve implementation.", "position": "design" },
{ "text": "* Update local instant to match online instant: - Suggestion box/suggestion styling - Arrowing through suggestions should loop * Fix bug where clicking a suggestion causes new native suggestions to load, instead of navigating. * Some JS cleanup.", "position": "design" },
{ "text": "Consolidate dialog style flags and strings; etc.", "position": "design" },
{ "text": "[filemanager] New visual style for importing progress dialog.", "position": "design" },
{ "text": "[Autofill] Style cleanup in phone number-related code.", "position": "design" },
{ "text": "Minor style cleanups in MediaStreamUIController and MediaStreamManager.", "position": "design" },
{ "text": "NTP5: Fine tuning of Apps implementation: - adjusted styling of App icons - added scrollable area for Apps - Apps are now sorted alphabetically - adjusted positioning of Tiles/Apps", "position": "design" },
{ "text": "Trivial style fix in message_bubble_base.", "position": "design" },
{ "text": "This patch fixes following style violations:", "position": "design" },
{ "text": "Fix JavaScript style violations for main.js in chrome/browser/resources/bookmark_manager/js.", "position": "design" },
{ "text": "Update Chrome style inter-button spacing and fix clipping of drop shadow.", "position": "design" },
{ "text": "cc: Switch the DrawQuad enum names to chromium style and remove pragmas", "position": "design" },
{ "text": "Add real support for uint128. These files originated with google internally, and since they are shared, the style is a bit different. Removed SWIG support and references to other internal classes.", "position": "design" },
{ "text": "Chrome style default button changes: don't update default on focus change, and render with bold text.", "position": "design" },
{ "text": "Fix constant integers style in persistent_tab_restore_service.cc.", "position": "design" },
{ "text": "Clean up style in QuicConnection, et. al. as per Chrome comments", "position": "design" },
{ "text": "This introduces two new Windows-guarded sections in the root options.html to incorporate settings-app specific CSS and a JS hook to activate that style if the page is loaded in the Settings App (by checking document.location)", "position": "design" },
{ "text": "Unreviewed. Style fix following r133262.", "position": "design" },
{ "text": "views: Fix style issues found in DoPrintViewGraph() function.", "position": "design" },
{ "text": "cc: Fix style for comments at the end of namespaces", "position": "design" },
{ "text": "Omnibox styling should be restored to default", "position": "design" },
{ "text": "Fixed arguments order for AppenResultWithKey (Google style guide dictates output params after input params).", "position": "design" },
{ "text": "Have the login prompt use new contrained window style when flag is active.", "position": "design" },
{ "text": "Add minimize/maximize buttons to app window; update style to win8.", "position": "design" },
{ "text": "Replace Settings App placeholder icons with designer icons.", "position": "design" },
{ "text": "Minor style cleanup of QuicProtocol", "position": "design" },
{ "text": "Clean up style of QUIC's CryptoFramer et. al.", "position": "design" },
{ "text": "migrate views media galleries dialog to Chrome style constrained dialog", "position": "design" },
{ "text": "No need to support old style dasher domains.", "position": "design" },
{ "text": "Cleaned up style based on code review comments.", "position": "design" },
{ "text": "New custom styling for action box menu on Os X.", "position": "design" },
{ "text": "Turned on Shadow DOM and style scoped flags by default.", "position": "design" },
{ "text": "NTP5: Move necessary styles from ntp4/new_tab.css to ntp_search and delete. Clean up style overrides.", "position": "design" },
{ "text": "Fix some style violations in perparation for changing this code. * resources/magnitude-perf.js: (Magnitude.run): (Magnitude._logIterationInfo): (Magnitude._runIteration):", "position": "design" },
{ "text": "Fix style error in AwContentsIoThreadClientImpl", "position": "design" },
{ "text": "Allow ports to override text track rendering style <rdar://problem/12044964>", "position": "design" },
{ "text": "Fix GDrive promo style and condition.", "position": "design" },
{ "text": "Use upstream style for whitelisting clang (fixes http://codereview.chromium.org/10988014/)", "position": "design" },
{ "text": "In files.app make search box style more Kennedy-like.", "position": "design" },
{ "text": "We do not pass enums by conts references. This CL fixes style errors introduced in a previous CL.", "position": "design" },
{ "text": "tools/chrome_remote_control and tools/gpu style fixes.", "position": "design" },
{ "text": "NTP5: Fix page blacklisting and remove recently closed tabs when they're clicked. Fix the styling of the blacklist notification and pull it out of the tile page.", "position": "design" },
{ "text": "Make ash tray bubble detail view UI consistent with default view, slightly adjust other UI elements for better alignment UI effect per UI designer spec.", "position": "design" },
{ "text": "Fix include guard style for stale_cache_files_remover.h", "position": "design" },
{ "text": "Brace style fixes in http_cache_transaction.cc", "position": "design" },
{ "text": "Implement status tray notifications in Windows 8 metro chrome using metro style notifications. We don't support running native context menu's in these notifications.", "position": "design" },
{ "text": "Correct style issues in Linux sandbox code.", "position": "design" },
{ "text": "Clang style checker: turn on checks for nested classes", "position": "design" },
{ "text": "Add cc/ to banned_directories in chromium clang style checker", "position": "design" },
{ "text": "Add the prototype for the function to display metro style notifications.", "position": "design" },
{ "text": "Valgrind: Fix some leaks and style issues in NetInternalsUI.", "position": "design" },
{ "text": "Cleanup: Fix some style nits.", "position": "design" },
{ "text": "chromeos: output_configurator: various style fixes", "position": "design" },
{ "text": "Add support for invoking the Windows 8 metro style hung renderer dialog box. This functionality is provided by the newly added class HungRendererDialogMetro.", "position": "design" },
{ "text": "Enable new checkbox style by default (Linux/CrOS only)", "position": "design" },
{ "text": "Standardize log message style for cloudprint service and display printer id and job id wherever possible", "position": "design" },
{ "text": "gtk: Fix style case of attributeFlags variable. It should be unix_hacker style.", "position": "design" },
{ "text": "[File Manager] JS style fixes in metadata parsers", "position": "design" },
{ "text": "Change linefeed code from CRLF to LF following our style guide.", "position": "design" },
{ "text": "Fix style nits in gdata directory.", "position": "design" },
{ "text": "base: Clean up stl_util.h style issues.", "position": "design" },
{ "text": "[mac] Update RWHV's active style when shell window is focused/blurred.", "position": "design" },
{ "text": "Fix a clang style checker warnings when building with -Duse_aura=1 on Linux.", "position": "design" },
{ "text": "Fix one-character misalignment of styles in gfx::RenderTextLinux.", "position": "design" },
{ "text": "Fix style nits in invert_bubble_views.cc", "position": "design" },
{ "text": "[cros] Update OOBE enrollment screen to new layout. * Fix few style issues in oobe_screen_oauth_enrollment.js", "position": "design" },
{ "text": "Unreviewed style fix after r120351.", "position": "design" },
{ "text": "Not reviewed: remove redundant Mac-specific style rule from inspector front-end.", "position": "design" },
{ "text": "Changing style of file name input box in the Save dialog.", "position": "design" },
{ "text": "Add a link to design doc for NetLog.", "position": "design" },
{ "text": "Minor style cleanup in metrics_reporting_scheduler.*", "position": "design" },
{ "text": "[net] Update style in PriorityQueue and PrioritizedDispatcher after readability review.", "position": "design" },
{ "text": "Move platform_app.css styles from html to body.", "position": "design" },
{ "text": "Remaining style fixes from http://codereview.chromium.org/10443024/.", "position": "design" },
{ "text": "Adding new touch style for wrench menu", "position": "design" },
{ "text": "[Photo Editor] Javascript style fixes", "position": "design" },
{ "text": "[filemanager] Fix style warnings in utils.js.", "position": "design" },
{ "text": "Fix presubmit js style nits.", "position": "design" },
{ "text": "[FileBrowser] Altered menu style according to mocks", "position": "design" },
{ "text": "Cleanup Javascript Style Violations for chrome://omnibox/", "position": "design" },
{ "text": "JavaScript style fixups in feedback.js", "position": "design" },
{ "text": "[File Manager] Fixed cursor style for Learn More link", "position": "design" },
{ "text": "Fix presubmit style issues for JS and add network_action_predictor to JS checker.", "position": "design" },
{ "text": "History: Fix JavaScript style issues so presubmit checks pass.", "position": "design" },
{ "text": "[cros] Remove user button style fixes.", "position": "design" },
{ "text": "Fix more tracing style issues.", "position": "design" },
{ "text": "Implement STYLE_LOWERCASE style for Aura NativeTextfield.", "position": "design" },
{ "text": "Fix style errors in file_manager.js", "position": "design" },
{ "text": "Fix element names in network details to follow style guidelines.", "position": "design" },
{ "text": "views: Fix minor style issues in SimpleMessageBoxViews.", "position": "design" },
{ "text": "Fixed small CSS style nit.", "position": "design" },
{ "text": "Set the frame style in metro mode to custom.", "position": "design" },
{ "text": "JavaScript style fixups in flags.js", "position": "design" },
{ "text": "JS style nits: plugins.js", "position": "design" },
{ "text": "a few more JS style nits...", "position": "design" },
{ "text": "Fix style nits in profiler.js", "position": "design" },
{ "text": "Fixing presubmit check js style errors.", "position": "design" },
{ "text": "Revert 130776 - Change the frame style bits and resize it if we are in immmersive (metro) mode.", "position": "design" },
{ "text": "Change the frame style bits and resize it if we are in immmersive (metro) mode.", "position": "design" },
{ "text": "[cros] Login screen: 'X' button style fixes.", "position": "design" },
{ "text": "Fix a variable naming style nit post-refactoring", "position": "design" },
{ "text": "CSS styling polish fixes for the settings page.", "position": "design" },
{ "text": "Fix issues in RenderTextWin where font style and sizes may not be getting applied.", "position": "design" },
{ "text": "[File Manager] Fixed hover style for the left panel and USB icon alignment", "position": "design" },
{ "text": "Add a border to views_examples' text styles example.", "position": "design" },
{ "text": "Disk cache. Fix style on some missing files.", "position": "design" },
{ "text": "JavaScript style nits that I missed before", "position": "design" },
{ "text": "Disk cache: Fix style and extra net:: specification.", "position": "design" },
{ "text": "[Chromoting] Move the code that styles the scale-to-fit button from client_screen.js to client_session.js.", "position": "design" },
{ "text": "[uber page] Style updates to match uber page mocks.", "position": "design" },
{ "text": "Fix style on network details to put scrollbar in tab contents.", "position": "design" },
{ "text": "[filebrowser] New visual style for tasks picker.", "position": "design" },
{ "text": "The Disconnect and Continue windows should have the WS_EX_TOOLWINDOW style set to make sure they do not appear in the taskbar.", "position": "design" },
{ "text": "settings - share inline list button style between different list types", "position": "design" },
{ "text": "Implement new overlay style for options pages.", "position": "design" },
{ "text": "css hack n' slash, continued: New styles for checkboxes and radios.", "position": "design" },
{ "text": "Fix JavaScript style nits in resources/uber", "position": "design" },
{ "text": "Fix JavaScript style nits in extensions/", "position": "design" },
{ "text": "[clean up] Make chrome/browser/resources/{extensions,uber}'s CSS match style guide (no functional changes).", "position": "design" },
{ "text": "speech: Do not use unix_hacker style for virtual methods.", "position": "design" },
{ "text": "Updated design according to mocks. Added new icons. Fixed UI colors, offsets and margins.", "position": "design" },
{ "text": "[Qt] Use correct define names for HAVE(FOO) style optional dependencies", "position": "design" },
{ "text": "net: code style fixups - no semantic change.", "position": "design" },
{ "text": "css hack n' slash, continued: New styles for buttons and selects.", "position": "design" },
{ "text": "PRESUBMIT check for JavaScript style errors", "position": "design" },
{ "text": "Improved Chrome OS Media Player style and behavior", "position": "design" },
{ "text": "[Clean up] CSS style nits", "position": "design" },
{ "text": "Cleanup: Make the Linux gamepad code more robust and do some style cleanup.", "position": "design" },
{ "text": "JavaScript style nits", "position": "design" },
{ "text": "Fixed grammar error and fixed problem with TODO items (changed to 'C' style comment so Doxygen strips them out). Tried // but it caused the generator to not write the file.", "position": "design" },
{ "text": "Fix style issues of tools/android", "position": "design" },
{ "text": "Revert 122135 - PRESUBMIT check for JavaScript style errors", "position": "design" },
{ "text": "Gesture Recognizer Diagram now references design document on chromium.org.", "position": "design" },
{ "text": "Settings: Fix setting the title for the sync setup overlay. * Only set the title in updateHistoryState_(). * Style fixes.", "position": "design" },
{ "text": "views: Fix private data member variable name to match with Chromium style guide.", "position": "design" },
{ "text": "Fix JavaScript style errors in options2", "position": "design" },
{ "text": "[Clean up] Fix style guide nits in chrome/browser/resources/options2.", "position": "design" },
{ "text": "[Clean up] Fix style guide nits in chrome/browser/resources/ntp4.", "position": "design" },
{ "text": "Settings: Clean up browser_options page according to style guide.", "position": "design" },
{ "text": "Fix JavaScript style in ntp4", "position": "design" },
{ "text": "Updating video player visual style in the Chrome OS File Browser", "position": "design" },
{ "text": "[uber page] Minor style improvements.", "position": "design" },
{ "text": "[uber page] Update style for links and link-button per UI review.", "position": "design" },
{ "text": "[uber page] Style update for sub-pages & headers", "position": "design" },
{ "text": "Unreviewed inspector style fix.", "position": "design" },
{ "text": "Clang style plugin: add two banned directories.", "position": "design" },
{ "text": "Pepper SRPC proxy style and type nits - use NACL_PRId32 for PP_Instance, PP_Resource, and PP_Module instead of NACL_PRIu32 in DebugPrintf - use PP_ToBool or PP_FromBool to cast between PP_Bool and bool", "position": "design" },
{ "text": "aura: Update status area text style to match background.", "position": "design" },
{ "text": "Some style cleanups for text_elider.", "position": "design" },
{ "text": "[WinCairo] Build correction. Switch to Apple style builds without the _debug postfix so that launching tools, etc., will work properly.", "position": "design" },
{ "text": "Unreviewed inspector scripts navigator style fixes.", "position": "design" },
{ "text": "Change cloud print dialog style in Aura builds. This style more closely resembles other print dialogs and adds a close button.", "position": "design" },
{ "text": "Use standard frame style routines on Aura (i.e. don't use BubbleWindow/BubbleFrameView).", "position": "design" },
{ "text": "Enable bold and italic text styles in RenderText*.", "position": "design" },
{ "text": "Unreviewed, inspector style fix.", "position": "design" },
{ "text": "Revert 116945 - Enable bold and italic text styles in RenderText*.", "position": "design" },
{ "text": "Add more text styles to Text Styles example in views_examples.", "position": "design" },
{ "text": "Remove UpdateLayout from SetSelectionModel, since except fonts, all other styles (foreground, underline, strike) are applied through Skia (not Pango) during drawing the text.", "position": "design" },
{ "text": "Downloads: fix CSS to match style guidelines.", "position": "design" },
{ "text": "Don't make classes derive from ChildProcessHost, and instead have them use it through composition. This cleans up the code and makes it easier to understand (as well as more closely conform to the Google C++ style guide). It also makes it possible to add an interface around ChildProcessHost in a future change.", "position": "design" },
{ "text": "Upon calling RenderText::SelectRange, the selection style should be applied.", "position": "design" },
{ "text": "fix style violation for clang style plugin on chromeos.", "position": "design" },
{ "text": "Whitespace style fix (that I previously overlooked).", "position": "design" },
{ "text": "Print Preview: Fixing code style issues reported by gjslint.", "position": "design" },
{ "text": "History/Downloads: - Adding button and checkbox css to history and downloads. - Tweaked checkbox styles for history.", "position": "design" },
{ "text": "Fixes use after free in BrowserView, and cleans up a couple of style nits I noticed along the way.", "position": "design" },
{ "text": "Unreviewed. Fix style nits in printing.py.", "position": "design" },
{ "text": "Only use the textured window style mask when there is no override inspector page.", "position": "design" },
{ "text": "NSS: update NPN patch to fix comment style and ssl.def.", "position": "design" },
{ "text": "[filemanager] Thumbnail styles in the preview pane", "position": "design" },
{ "text": "Fixup style of TabSwitcherView.", "position": "design" },
{ "text": "Fixup style for SocketPoolWrapper", "position": "design" },
{ "text": "Fixup style in details_view.js", "position": "design" },
{ "text": "Fixup style of SourceRow.", "position": "design" },
{ "text": "Fixup style of LogGrouper", "position": "design" },
{ "text": "Fixup style for source_entry.js", "position": "design" },
{ "text": "Fixup style of source_tracker.js", "position": "design" },
{ "text": "Fix up style for TopMidBottomView.", "position": "design" },
{ "text": "Fix style_range_.erase() which caused style range not deleted completely and dcheck error.", "position": "design" },
{ "text": "Copying Scrollbar style from ChromeOS into Aura. It is very likely that the theme will continue to evolve on Aura so we want to make copies:", "position": "design" },
{ "text": "style plugin: Don't ignore style warnings on the linux clang trybots.", "position": "design" },
{ "text": "[Qt] Unreviewed coding style fix.", "position": "design" },
{ "text": "Replace use of access to nodeList using call, with array style notation.", "position": "design" },
{ "text": "mac: Turn style plugin on by default.", "position": "design" },
{ "text": "[ntp4] Improve styling for bookmarks header bar.", "position": "design" },
{ "text": "Clean up style errors introduced in r99349. Review URL: http://codereview.chromium.org/7739015", "position": "design" },
{ "text": "<rdar://problem/10071256> Retain retired custom fonts until the next style recalc", "position": "design" },
{ "text": "Workaround windows classic theme rendering artifacts. Wrap DefWindowProc for WM_NCLBUTTONDOWN with ScopedRedrawLock. Update the saved window style to handle max/restore, etc.", "position": "design" },
{ "text": "clang style plugin: Don't try to figure out src root.", "position": "design" },
{ "text": "Fix path to style sheet in fast/events/constructors/event-constructors.html.", "position": "design" },
{ "text": "Completely random typo fixes and style corrections cleanup.", "position": "design" },
{ "text": "Fix design shortcomings in Message classes.", "position": "design" },
{ "text": "Cleanup: Fix some incorrect messages and style nits in the print preview code.", "position": "design" },
{ "text": "[ntp4] Apply style tweaks so that bookmarks page scrolls correctly.", "position": "design" },
{ "text": "Update pages' style and content scale when the window's backing scale factor changes", "position": "design" },
{ "text": "CrOS OOBE: Fix styling for the enrollment confirmation page.", "position": "design" },
{ "text": "Introducing a BubbleWindows hosted in a views::Widget (this class is not yet in use). Separated the style defintions pertaining to the BubbleWindow in a different module which can be shared by both the GTK and Views implementations. Also Views implementation is disabled at the moment, although functional it is not complete.", "position": "design" },
{ "text": "Sandbox: Fix a style nit. No actual code change.", "position": "design" },
{ "text": "Fix build break in r93970 due to style issue.", "position": "design" },
{ "text": "Virtual printer driver style cleanup", "position": "design" },
{ "text": "Extend the protector of a CSS style sheet. Because checkLoaded() can recursively delete parent style elements, the protector should be extended to include the parent call.", "position": "design" },
{ "text": "Minor code style cleanup. Added id3 metadata parser to filemanager.", "position": "design" },
{ "text": "Revert 93187 - Minor code style cleanup. Added id3 metadata parser to filemanager.", "position": "design" },
{ "text": "Fix media code to use initializer-list style for inheritance.", "position": "design" },
{ "text": "Coding style update.", "position": "design" },
{ "text": "[cros] Tweak visual style of welcome screen network control.", "position": "design" },
{ "text": "[Sync] Don't set old style bookmarks anymore.", "position": "design" },
{ "text": "Follow up patch on issue 7192007, containing mainly style fixes.", "position": "design" },
{ "text": "Reformat to match style guide.", "position": "design" },
{ "text": "Add Windows-specific pixel and text results to account for the different design of the ying-yang character on Windows (and of course to get the bots green).", "position": "design" },
{ "text": "[Mac] Change the style of the infobar buttons.", "position": "design" },
{ "text": "Better support for dangerous and in progress downloads, style cleanup.", "position": "design" },
{ "text": "Add idl_c_proto for generating 'C' style prototypes from IDL", "position": "design" },
{ "text": "Fix some style issues with VideoCaptureControllerID.", "position": "design" },
{ "text": "Fix clang style plugin problems.", "position": "design" },
{ "text": "Clang style checker: add the 'clang' dir to list of banned directories.", "position": "design" },
{ "text": "Make the app provider match highlighting use the existing ClassifyMatchXXX() machinery, and set the correct base styles (NONE rather than DIM for the contents, and URL rather than DIM for the description).", "position": "design" },
{ "text": "Options: Style cleanup - id attribute first.", "position": "design" },
{ "text": "ui/base/models: Convert GetKeyCode() to unit_hacker() style (key_code()).", "position": "design" },
{ "text": "Removing 'using namespace' style violations in src/ipc/", "position": "design" },
{ "text": "[Sync] Tweak CSS styles for Sync Node Browser in chrome://sync-internals", "position": "design" },
{ "text": "Changed styling on urls in download page to be more conventionally URL-looking so they'll be easier to copy and handle.", "position": "design" },
{ "text": "This fixes a style issue in the glue_serialize code which moves previously static functions into an unnamed namespace to more closely resemble the rest of the Chrome codebase.", "position": "design" },
{ "text": "Address some style nits with Autofill metrics", "position": "design" },
{ "text": "Bug 59266 - DFG JIT - Add SSA style DCE", "position": "design" },
{ "text": "Cleanup: Fix some style issues in the printing code. Fix misuse of scoped_ptr.", "position": "design" },
{ "text": "The optional Malware Details also collects HTTP cache information. See design doc for background (http://goo.gl/omvhq)", "position": "design" },
{ "text": "[Mac] Update infobars to the new style and remove the current anti-spoof bulge.", "position": "design" },
{ "text": "Some style changes (for readability).", "position": "design" },
{ "text": "Fixed a few styles issues in skia::PlatformDevice. Made function names consistent. Added Begin/EndPlatformPaint on Mac. Review URL: http://codereview.chromium.org/6691067", "position": "design" },
{ "text": "RTL window styles was being set on too many HWNDs. This inverts the default. There may be cases where the window styles are necessary however. Those I do not know and am going to rely on RTL QA to tell me about.", "position": "design" },
{ "text": "Fix Clang style errors.", "position": "design" },
{ "text": "Fix some style issues in media/video/ffmpeg_video_allocator.{cc,h}.", "position": "design" },
{ "text": "Update computed style results.", "position": "design" },
{ "text": "ntp4 - visual style of bottom bar.", "position": "design" },
{ "text": "[Mac] Remove a dead ivar and minor style conformance.", "position": "design" },
{ "text": "importer: Sort the methods of ImporterHost class according to our c++ style guide.", "position": "design" },
{ "text": "Clang style fix for r76746.", "position": "design" },
{ "text": "Tweak style for cr.ui tabbox slightly", "position": "design" },
{ "text": "Fix CSS style for chromoting setup wizard", "position": "design" },
{ "text": "Fix style mistakes in r75477.", "position": "design" },
{ "text": "Fix a Style Guide nit: include platform_mime_util.h first.", "position": "design" },
{ "text": "Comment out unused parameter names in function definitions, to adhere to the C++ Style Guide.", "position": "design" },
{ "text": "CSS style for chromoting main page", "position": "design" },
{ "text": "Sync: Separate the styling and scripts from gaia_login.html into their appropriate CSS/JS files.", "position": "design" },
{ "text": "clang: Compille the style checker plugin on the bots.", "position": "design" },
{ "text": "JS style cleanup Remove unnecessary commas at the end of an array, pointed out by JScompiler and fix some apparent errors in JSDoc comments.", "position": "design" },
{ "text": "Revert 73019 - Fix style problems in the Balloon implementation on linux in preparation for turning on chrome-style bot.", "position": "design" },
{ "text": "DOMUI Prefs: Final style changes for M10", "position": "design" },
{ "text": "Fix style problems in the Balloon implementation on linux in preparation for turning on chrome-style bot.", "position": "design" },
{ "text": "DOMUI: Refactor the new overlay style and apply it to all overlays.", "position": "design" },
{ "text": "DOMUI Prefs: Miscellaneous style tweaks", "position": "design" },
{ "text": "DOMUI Prefs: Small style fixes for Basics page.", "position": "design" },
{ "text": "DOMUI: Style common HTML controls to match the rest of the DOMUI pages.", "position": "design" },
{ "text": "DOMUI: Refactor common list style into 'settings-list' class.", "position": "design" },
{ "text": "Fix 'else' style nit.", "position": "design" },
{ "text": "Cleanup X509CertificateMac style nits and introduce a crypto library agnostic means of parsing certificate dates.", "position": "design" },
{ "text": "Cleanup some installer style nits.", "position": "design" },
{ "text": "Cleanup - change comment style in ppb_audio_trusted_dev.h to c style - change shm_size to uint32_t to match other interfaces", "position": "design" },
{ "text": "DOMUI: Style consistency in personal_options.html. * IDs first, when needed. * IDs use dashed-names. * i18n-content uses camelCase. * Wrap on 80 cols.", "position": "design" },
{ "text": "Coding style clean up of DomStorageContext.", "position": "design" },
{ "text": "Adding style notion to the TextButton.", "position": "design" },
{ "text": "Add THROBBER style for BubbleWindow. Employ BubbleWindow with throbber for proxy settings dialog.", "position": "design" },
{ "text": "Gtk: Fix leaking style objects when using gtk theme.", "position": "design" },
{ "text": "Expose DOM node display style as IAccessible2 object attribute.", "position": "design" },
{ "text": "Tweak coding style (follow-up to r71264).", "position": "design" },
{ "text": "DOMUI: Move inline style rule to its own css file.", "position": "design" },
{ "text": "Implement new strategy for default apps. Instead of using the component extension system, simply install them as normal apps the first time Chrome runs. Remove the old style default apps.", "position": "design" },
{ "text": "Changes the style of the username label.", "position": "design" },
{ "text": "DOMUI implementation of Menu2. A few key design points. * Uses DOMView to render menu content. * MenuUI (subclass of DOMUI) uses GtkWiget tree to access WidgetGtk and MenuModel. Alternative way was to change TabContents::GetDOMUIForCurrentState() public and pass them throught it, but this seems to work fine. * Input/Focus is controlled by gtk_grab_add. Input is grabbed by the root widget, and then sent to each active menu widget via gtk_grab_add. * Menu gets shown after the renderer rendered the content (thus has some size) to avoid showing small/empty menu. Mouse processing is blocked until the menu is shown (see Dispatcher).", "position": "design" },
{ "text": "net: Fix incorrect style used in some enumerations.", "position": "design" },
{ "text": "Remove some unnecessary style recalc.", "position": "design" },
{ "text": "Fix Windows build. Yay for the style review bot telling me to do something that breaks Windows.", "position": "design" },
{ "text": "Fix style guide errors in comments", "position": "design" },
{ "text": "Various style fixes (indenting, captitalization, adding some comments).", "position": "design" },
{ "text": "Windows Build Fix. Fix some fallout from r67238, currentForm is now off of SelectionController instead of frame. Also fix a style issue.", "position": "design" },
{ "text": "Fix style issues with ConfigDirPolicyProvider.", "position": "design" },
{ "text": "Rename the following SSLClientSocket methods to match the style guide:", "position": "design" },
{ "text": "History provider: style cleanup", "position": "design" },
{ "text": "Revert 56939 - History provider: style cleanup", "position": "design" },
{ "text": "Cleanup: * Remove unnecessary code * Make function declaration style match style guide (one arg per line is preferred when all don't fit, but related args may be together)", "position": "design" },
{ "text": "Match the Notifications infobar color with the color of all other confirmation infobars. Use the new blue style instead of the old yellow.", "position": "design" },
{ "text": "fixup for style nits", "position": "design" },
{ "text": "Fix style issues in CSS files of DOMUI options:: 0px -> 0.", "position": "design" },
{ "text": "[Mac] Make the default background style for InfoBubbleView white, per alcor.", "position": "design" },
{ "text": "JavaScriptCore: Bug 43515 - Fix small design issues with PageAllocation, split out PageReservation.", "position": "design" },
{ "text": "Use the blue style for the save password info bar.", "position": "design" },
{ "text": "Nukes the nano tab style for views. I also consolidated code in TabStripModel to minimize how many places I call to is_app and pinned.", "position": "design" },
{ "text": "Nukes the nano tab style on gtk and brings back the toolbar for apps on gtk. This is a revert of most of r52070and 51478. I've kept parts of these changes we want in though: comments, nuking nano tab gap on views, having app tabs use a bigger icon.", "position": "design" },
{ "text": "Fix missing throbber in sync dialogs. This actually does a number of things: * Correct throbber path in choose_datatypes.html (I overlooked this) * Change CSS style settings for throbber to a form the inliner could understand, so the image got inlined properly * Remove references to throbber path from sync_setup_wizard.cc (no longer needed) * Fix improper use of url_constants.* (only paths that need to be in common/ should be there) and change sync hostname constant name to match other hostnames' naming scheme", "position": "design" },
{ "text": "Fix some style issues in Rect I noticed.", "position": "design" },
{ "text": "Don't save SSNs--quick style fix.", "position": "design" },
{ "text": "Fix style issues pointed in another change.", "position": "design" },
{ "text": "Refactored ggl::SwapBuffers to take the GGL context as an argument. It was using the context made current with ggl::MakeCurrent before. The new design is more consistent with other SwapBuffers implementations.", "position": "design" },
{ "text": "Notification balloons don't want the WS_EX_LAYOUTRTL style flag, since the directionality of the content is specified already inside the HTML.", "position": "design" },
{ "text": "A couple of style mods in proxy_config_service_linux.cc", "position": "design" },
{ "text": "Rename class to comply with style guide. Tweak comments for grammar and correctness.", "position": "design" },
{ "text": "Add styling for buttons.", "position": "design" },
{ "text": "DOMUI shared resources: Update menu style to follow Roma's spec for menus", "position": "design" },
{ "text": "Fixed a typo in pool code and made comments more google style Implemented ParamObject.removeParam and ParamObject.copyParams. Minor style change in primitive.js. Review URL: http://codereview.chromium.org/2083004", "position": "design" },
{ "text": "- Fix style issue - Rename ScopedRegionClipping to ScopedClipRegion", "position": "design" },
{ "text": "Fix the code indentation inside a namespace to be consistent with the style guide.", "position": "design" },
{ "text": "A bunch of nice micro-optimizations for ~1% speedup on PLT. - Add fastGetAttribute. The same as getAttribute except can only be called when it is known not to be style attribute or one of the SVG animatable attributes. - Inline some functions from Font. - Return the same string from deprecatedParseURL if there is nothing to strip. - Use a member variable instead of a virtual function to determine whether a ScheduledNavigation is a location change.", "position": "design" },
{ "text": "DevTools: inspector tabs are initially drawn in the undocked style even for docked inspectors BUG=40804", "position": "design" },
{ "text": "Auto-format style pass over files.", "position": "design" },
{ "text": "Fix minor style nits found by the style-script.", "position": "design" },
{ "text": "Rewrote the revision (r56942) to disable the 79 character line length limit Python/PEP8 style check.", "position": "design" },
{ "text": "Minor style fixes to bookmark_pasteboard_helper_mac.mm.", "position": "design" },
{ "text": "This is basically a rewrite of the DataTypeManager to support dynamic data type configuration. DTM::Start() has been replaced with DTM::Configure(). Note that the callback is also gone, replaced with notification service style notifications to tell listeners that configuration has started or finished.", "position": "design" },
{ "text": "Slightly tweak the style of some plugin code that's been bugging me.", "position": "design" },
{ "text": "[Mac] First run dialog cleanup - coding style fixes for ivars - fixed some 10.6 toolchain warnings from the xib - provide custom getters for two properties to always return false when the matching controls are hidden. - Autosize the window to handle any possible l10n now - Make headers, buttons, and all by the stats/breakpad checkbox force the window to grow as needed. - Wrap the stats/breakpad checkbox to the resulting width (it will never fit otherwise). - Layout/shuffling things based on the views that get hidden (no other browsers to import from, not stats pref).", "position": "design" },
{ "text": "Modify WidgetWin::Init() such that it doesn't create the FocusManager if the window is style WS_CHILD and parented to the desktop. We intentionally set the parent to the desktop window to remove it from the FocusManager hierarchy while the window is hidden.", "position": "design" },
{ "text": "First cut at custom user style sheets.", "position": "design" },
{ "text": "Initialize the GTK style for the balloon toolbar before creating any view objects. Otherwise the first balloon doesn't get the style applied, although subsequent balloons do.", "position": "design" },
{ "text": "Rename the DLL and the executable used by NaCl on Win64 (chrome_nacl_win64.dll -> nacl64.dll, nacl.exe -> nacl64.exe). The motivation for the change: 1. Make the name shorter (look better when installed on users machines) 2. Allow differentiation between 64-bit and 32-bit binaries if we decide to switch to a similar design for 32-bits too.", "position": "design" },
{ "text": "Fix style issue mentioned in previous review that I overlooked.", "position": "design" },
{ "text": "<rdar://problem/7658811> Multiple style recalcs due to getComputedStyle() on “display: none;” element when there are pending style sheets", "position": "design" },
{ "text": "Fix up some style guide violations wrt aligning function arguments.", "position": "design" },
{ "text": "Hooked up network selection and account creation screens to login wizard so when these screens exit, login screen is shown. Separated loading l10n strings to simplify implementation of ui language switch. Fixed some style issues.", "position": "design" },
{ "text": "Addressing issues found by style bot.", "position": "design" },
{ "text": "Make print styles work again.", "position": "design" },
{ "text": "Fix doc styling bug where underscores are invisible in some highlighted code.", "position": "design" },
{ "text": "Apply style guideline for variable names for browser action container.", "position": "design" },
{ "text": "Minor style fix - reported by the style bot", "position": "design" },
{ "text": "By popular (?) demand, add some more options for different styles of output. This concludes my screwing around with the output format of this script.", "position": "design" },
{ "text": "<rdar://problem/7341364> Crash at HTMLParser::popOneBlockCommon() after handling misnested residual style tags", "position": "design" },
{ "text": "Add support for wu-ftpd style FTP LIST response format.", "position": "design" },
{ "text": "Add ExtensionsQuotaService to limit abusive amounts of requests to mutating extension functions, as discussed on chromium-dev and in Extensions quotaserver design doc.", "position": "design" },
{ "text": "Fix console object style in DevTools window", "position": "design" },
{ "text": "Changed SyncStatusUIHelper namespace class into a real namespace (sync_ui_util), per style guide.", "position": "design" },
{ "text": "Tiny style fix.", "position": "design" },
{ "text": "GTK: Remove problematic theme styles from the location bar.", "position": "design" },
{ "text": "Makes it so you can't detach tabs on Chrome OS. It doesn't make sense given the current design and triggers a crash. I'm also effectively disabling DockInfo for ChromeOS as that triggers a crash. I don't believe we'll hit the code after my first change, but I'm going for completeness.", "position": "design" },
{ "text": "Improve text on management UI. Still waiting for a treatment from the design team, but I wanted to at least get the words in before the string freeze.", "position": "design" },
{ "text": "A large number of style nits in preparation for turning on automated cpplint.py.", "position": "design" },
{ "text": "Fix a style nit in client_socket.h.", "position": "design" },
{ "text": "Fix style issues in View class.", "position": "design" },
{ "text": "Some style cleanup from comments after commit.", "position": "design" },
{ "text": "Fixed crashes on Windows related to incorrect sizing of the Canvas's backing store when CSS styles are used to resize the Canvas. Fixed incorrect rendering output on Mac OS X caused by similar issue.", "position": "design" },
{ "text": "Fixed style nits.", "position": "design" },
{ "text": "[mac] Make NTP floating style rect 1px thick. Also change the border color.", "position": "design" },
{ "text": "Unreviewed. Fixes style problems pointed out by Evan Martin.", "position": "design" },
{ "text": "Setting the SVN eol style to LF on chrome frame sources", "position": "design" },
{ "text": "Fix style issues in BookmarkModelVerifier class.", "position": "design" },
{ "text": "CompactNavigationBar for toolkit views build, with some design change per Cole's request. * Swapped the positions of entry field and navigation buttons. * Hide navigation buttions when the entry field gains focus. - To implement this, I added OnKillFocus in AutocompleteEditController, and updated corresponding files. * Added accelerator (shift-ctrl-0) to toggle compact navigation bar Changes to BrowserExtender * Made all virtual methods in BrowserExtender pure virtual. * Added HideToolbar method to control visibility of toolbar from Extender.", "position": "design" },
{ "text": "Changed anchor style to take a class name", "position": "design" },
{ "text": "Refactor: Address some style comments from a review (which missed the original check-in).", "position": "design" },
{ "text": "Add styles for printing.", "position": "design" },
{ "text": "Added one more style rule", "position": "design" },
{ "text": "Fix minor style violation.", "position": "design" },
{ "text": "Refactor domui menu to make extending easier * Moved the code to build JS model to MenuUI. * Added ModelUpdated/CreateMenuItem/AddCustomConfigValues for subclass to extends behavior. * Uses the actual icon size to compute left padding * Adjusted css padding parameters to match the mock", "position": "design" },
{ "text": "HTMLTitleElement should not resolve any styles when it is not in document.", "position": "design" },
{ "text": "Move style sharing logic into its own class", "position": "design" },
{ "text": "Currently, mediaControls.css is the base CSS, while mediaControlsChromium(Android).css are applied as extra style via RenderTheme::extraMediaControlsStyleSheet().", "position": "design" },
{ "text": "This patch changes initialization of typing style not to populate from form control like elements, which can't have range ending point, e.g. img, input, object, textarea, and so on.", "position": "design" },
{ "text": "[OSX] Minor style cleanup", "position": "design" },
{ "text": "Fix some style nits in the MostVisitedSites.java.", "position": "design" },
{ "text": "ASSERT that we only ever resolve style on elements in the StyleResolver's document", "position": "design" },
{ "text": "Hovered/active/focused will never share style with siblings/cousins.", "position": "design" },
{ "text": "Node::reattach should ASSERT about being in a style recalc", "position": "design" },
{ "text": "Element::setContainsFullScreenElement should schedule Forced style recalcs", "position": "design" },
{ "text": "Hovered/active/focused nodes will never share style with siblings/cousins.", "position": "design" },
{ "text": "DevTools: [FlameChart] change cursor style when it hovers a bar with js function.", "position": "design" },
{ "text": "Fix minor style issues in a11y code", "position": "design" },
{ "text": "Use Mac style app lifetime with app shims.", "position": "design" },
{ "text": "Use keyboard button styling for keyboard shortcuts in DevTools > Settings > Shortcuts. Also increase column widths to take into account the new button styling.", "position": "design" },
{ "text": "Files.app: Update the file-name text-field style on Save As dialog.", "position": "design" },
{ "text": "IndexedDB: Chromium Coding Style fixes - no default arguments", "position": "design" },
{ "text": "Refactored DataBuffer to use unix_hacker style methods.", "position": "design" },
{ "text": "Fix style issues in the calendar picker", "position": "design" },
{ "text": "Fix indentations and style in platform/graphics.", "position": "design" },
{ "text": "DevTools: Trim stylesheet URLs in the Styles sidebar to 30 characters", "position": "design" },
{ "text": "Small style fixes in syncfs-internals", "position": "design" },
{ "text": "remove remaining old style getters and setters from chrome", "position": "design" },
{ "text": "Disk cache: Fix back some style changes made recently.", "position": "design" },
{ "text": "Tweak new button style height for ChromeOS.", "position": "design" },
{ "text": "remove old style callbacks for property getters/setters", "position": "design" },
{ "text": "convert searchbox_extension to new style v8 callbacks", "position": "design" },
{ "text": "[Android] Tweak style of net error pages.", "position": "design" },
{ "text": "Skia/ext analysis canvas style change", "position": "design" },
{ "text": "IndexedDB: A handful of additional coding style corrections, c/o cpplint", "position": "design" },
{ "text": "childrenChanged should be invoked when updating a text of the style in shadow tree.", "position": "design" },
{ "text": "Fix style issues in basic shapes", "position": "design" },
{ "text": "Add CSSValueKeywords for listbox color colors We are moving the select element list box to shadow DOM and we need to use the following colors in the user agent style sheet.", "position": "design" },
{ "text": "Update DownloadDangerLevel to use style compliant enums.", "position": "design" },
{ "text": "Enforced new rules for braces in conditional and loop bodies in style checker.", "position": "design" },
{ "text": "Disallow style sharing for <dialog>.", "position": "design" },
{ "text": "Small style tweaks to the local NTP to match online.", "position": "design" },
{ "text": "Fix variable name style violation from r151791", "position": "design" },
{ "text": "Fix ShadowRoot styling after the revert of r150924", "position": "design" },
{ "text": "[chromedriver] Use unix style newlines when logging. BUG=none", "position": "design" },
{ "text": "Fix style issues in MemoryCache", "position": "design" },
{ "text": "IndexedDB: Chromium Coding Style fixes for AVLTree", "position": "design" },
{ "text": "move getters and setters to new style callbacks", "position": "design" },
{ "text": "Enable visual styles for content_shell.exe, so that tooltips can work when hover around an element with title attribution.", "position": "design" },
{ "text": "remove all old style function callbacks in generated bindings", "position": "design" },
{ "text": "Exclude background-repeat from comprasion when styling the controls.", "position": "design" },
{ "text": "[Android] Raise a compile time error if style resource is under values/", "position": "design" },
{ "text": "Refacotring: fix styles of i18n-content names (concerned with the language options).", "position": "design" },
{ "text": "remove remaining calls to old style MakeWeak", "position": "design" },
{ "text": "Adjust style of the popup dialogs's title in Files.app.", "position": "design" },
{ "text": "[Android] Generate v14 style resource from values-v17/ not values/.", "position": "design" },
{ "text": "move constructors to new style callbacks", "position": "design" },
{ "text": "Polish new dialog style layout and sizing.", "position": "design" },
{ "text": "Translate: style nits on r201807", "position": "design" },
{ "text": "Clean up the style of the jinja2 templates to use a lowercase_with_underscores naming convention.", "position": "design" },
{ "text": "Fixed style nit in Mac code so no one else has to deal with it.", "position": "design" },
{ "text": "QUIC - Added StringToHexASCIIDump to return a hex+ASCII dump in the style of tcpdump's -X and -XX options.", "position": "design" },
{ "text": "Add resize support for Views new style dialogs.", "position": "design" },
{ "text": "Fix style errors in PopupContainer and PopupListBox.", "position": "design" },
{ "text": "Match the design of Files.app header to v6 specs.", "position": "design" },
{ "text": "[Skia] Graphics context uses stroke style from previous renderings", "position": "design" },
{ "text": "- Disable detaching / reordering / moving tabs when the tab strip is using the super short immersive style. (This style is used when the top-of-window views are closed) - Disable detaching a tab from the tab strip when there is only one tab and the browser window is in immersive fullscreen", "position": "design" },
{ "text": "- Changed tab style - Removed line at the top.", "position": "design" },
{ "text": "Fix style issues in NaClDomHandlerProxy.", "position": "design" },
{ "text": "Proper positioning of new dialog style print preview.", "position": "design" },
{ "text": "Enable the new dialog style by default; etc.", "position": "design" },
{ "text": "Implement scoped style tree and scoped style resolver.", "position": "design" },
{ "text": "During deletion, we make style and link elements to direct child of editable root in DeleteSelectionCommand::makeStylingElementsDirectChildrenOfEditableRootToPreventStyleLoss().", "position": "design" },
{ "text": "Clean up the coding style in the media query classes", "position": "design" },
{ "text": "Files.app: Make the design of search box match the spec.", "position": "design" },
{ "text": "Don't recalc style for the whole subtree during animations", "position": "design" },
{ "text": "[Android] Warning if Left/Right attributes are used in layout and style xmls.", "position": "design" }
]